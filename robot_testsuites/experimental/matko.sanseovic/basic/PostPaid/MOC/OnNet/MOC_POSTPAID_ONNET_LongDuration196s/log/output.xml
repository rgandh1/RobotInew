<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20151202 14:50:15.560">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/MOC_POSTPAID_ONNET-LongDuration196s-robot-suite.txt" id="s1" name="MOC POSTPAID ONNET-LongDuration196s-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20151202 14:50:17.841" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20151202 14:50:17.845" level="INFO">${date} = Wed Dec  2 14:50:17 CET 2015</msg>
<status status="PASS" endtime="20151202 14:50:17.844" starttime="20151202 14:50:17.828"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:50:17.849" level="INFO">Date and time: Wed Dec  2 14:50:17 CET 2015</msg>
<status status="PASS" endtime="20151202 14:50:17.851" starttime="20151202 14:50:17.847"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:50:17.855" level="INFO">Target IN machine: 10.105.125.135</msg>
<status status="PASS" endtime="20151202 14:50:17.857" starttime="20151202 14:50:17.853"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:17.944" starttime="20151202 14:50:17.942"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:19.203" starttime="20151202 14:50:17.958"></status>
</kw>
<msg timestamp="20151202 14:50:19.211" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151202 14:50:19.208" starttime="20151202 14:50:17.946"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151202 14:50:19.235" level="INFO">Logging into '10.105.125.135:22' as 'qa_automation'.</msg>
<msg timestamp="20151202 14:50:21.072" level="INFO">Read output: Last login: Wed Dec  2 13:45:09 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb25 ~]$</msg>
<status status="PASS" endtime="20151202 14:50:21.075" starttime="20151202 14:50:19.229"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:21.077" starttime="20151202 14:50:19.215"></status>
</kw>
<msg timestamp="20151202 14:50:21.082" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151202 14:50:21.080" starttime="20151202 14:50:17.924"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151202 14:50:21.091" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151202 14:50:21.091" starttime="20151202 14:50:21.084"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151202 14:50:21.095" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20151202 14:50:22.815" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151202 14:50:22.821" level="INFO">${output} = I-New MVNA MTel - Core - Service 1.0.0 2015.11.12-14:31:57 is running PID: 12768 </msg>
<status status="PASS" endtime="20151202 14:50:22.818" starttime="20151202 14:50:21.093"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:22.836" starttime="20151202 14:50:22.829"></status>
</kw>
<msg timestamp="20151202 14:50:22.839" level="INFO">${status} = PASS</msg>
<msg timestamp="20151202 14:50:22.840" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151202 14:50:22.838" starttime="20151202 14:50:22.824"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:22.858" starttime="20151202 14:50:22.854"></status>
</kw>
<msg timestamp="20151202 14:50:22.861" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:50:22.860" starttime="20151202 14:50:22.843"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20151202 14:50:22.870" level="INFO">${version_r} =  1.0.0 2015.11.12-14:31:57 is running PID: 12768 </msg>
<status status="PASS" endtime="20151202 14:50:22.868" starttime="20151202 14:50:22.864"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151202 14:50:22.878" level="INFO">${version} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151202 14:50:22.877" starttime="20151202 14:50:22.873"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:22.886" starttime="20151202 14:50:22.882"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:22.915" starttime="20151202 14:50:22.910"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151202 14:50:22.924" starttime="20151202 14:50:22.918"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:22.928" starttime="20151202 14:50:22.890"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:22.944" starttime="20151202 14:50:22.940"></status>
</kw>
<msg timestamp="20151202 14:50:22.948" level="INFO">${ver} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151202 14:50:22.946" starttime="20151202 14:50:22.931"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:22.955" starttime="20151202 14:50:22.950"></status>
</kw>
<msg timestamp="20151202 14:50:22.960" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20151202 14:50:22.961" level="INFO">${in_version} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151202 14:50:22.958" starttime="20151202 14:50:17.882"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:23.040" starttime="20151202 14:50:23.038"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:23.093" starttime="20151202 14:50:23.047"></status>
</kw>
<msg timestamp="20151202 14:50:23.097" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151202 14:50:23.096" starttime="20151202 14:50:23.041"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151202 14:50:23.116" level="INFO">Logging into '10.105.125.171:22' as 'qa_automation'.</msg>
<msg timestamp="20151202 14:50:23.381" level="INFO">Read output: Last login: Wed Dec  2 13:45:11 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb25 ~]$</msg>
<status status="PASS" endtime="20151202 14:50:23.384" starttime="20151202 14:50:23.112"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:23.386" starttime="20151202 14:50:23.100"></status>
</kw>
<msg timestamp="20151202 14:50:23.391" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151202 14:50:23.390" starttime="20151202 14:50:23.028"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151202 14:50:23.406" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151202 14:50:23.405" starttime="20151202 14:50:23.394"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151202 14:50:23.413" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20151202 14:50:23.603" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151202 14:50:23.606" level="INFO">${output} = I-New UMS MVNO - XDR 6.2.0 is running PID: 5581 </msg>
<status status="PASS" endtime="20151202 14:50:23.605" starttime="20151202 14:50:23.409"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:23.619" starttime="20151202 14:50:23.614"></status>
</kw>
<msg timestamp="20151202 14:50:23.622" level="INFO">${status} = PASS</msg>
<msg timestamp="20151202 14:50:23.624" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151202 14:50:23.621" starttime="20151202 14:50:23.609"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:23.636" starttime="20151202 14:50:23.635"></status>
</kw>
<msg timestamp="20151202 14:50:23.637" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:50:23.637" starttime="20151202 14:50:23.626"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20151202 14:50:23.641" level="INFO">${version_r} = I-New UMS MVNO - XDR 6.2.0 is running PID: 5581 </msg>
<status status="PASS" endtime="20151202 14:50:23.641" starttime="20151202 14:50:23.639"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151202 14:50:23.645" level="INFO">${version} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151202 14:50:23.644" starttime="20151202 14:50:23.642"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:23.647" starttime="20151202 14:50:23.646"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:23.660" starttime="20151202 14:50:23.658"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151202 14:50:23.663" starttime="20151202 14:50:23.661"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:23.665" starttime="20151202 14:50:23.649"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:23.673" starttime="20151202 14:50:23.671"></status>
</kw>
<msg timestamp="20151202 14:50:23.674" level="INFO">${ver} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151202 14:50:23.674" starttime="20151202 14:50:23.666"></status>
</kw>
<msg timestamp="20151202 14:50:23.677" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20151202 14:50:23.678" level="INFO">${xdr_version} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151202 14:50:23.676" starttime="20151202 14:50:22.995"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:23.729" starttime="20151202 14:50:23.727"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:23.789" starttime="20151202 14:50:23.735"></status>
</kw>
<msg timestamp="20151202 14:50:23.793" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151202 14:50:23.792" starttime="20151202 14:50:23.730"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151202 14:50:23.812" level="INFO">Logging into '10.105.125.159:22' as 'qa_automation'.</msg>
<msg timestamp="20151202 14:50:23.991" level="INFO">Read output: Last login: Wed Dec  2 13:45:12 2015 from 10.105.80.196
[1m[qa_automation@ocs01.tb25 ~]$</msg>
<status status="PASS" endtime="20151202 14:50:23.993" starttime="20151202 14:50:23.807"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:23.995" starttime="20151202 14:50:23.796"></status>
</kw>
<msg timestamp="20151202 14:50:23.999" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151202 14:50:23.998" starttime="20151202 14:50:23.717"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151202 14:50:24.012" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151202 14:50:24.011" starttime="20151202 14:50:24.002"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151202 14:50:24.020" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20151202 14:50:24.170" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151202 14:50:24.173" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.2.0.30830
Negret Rating &amp; Charging Engine 6.2.0.30830 is running (PID:28716, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151202 14:50:24.172" starttime="20151202 14:50:24.015"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.187" starttime="20151202 14:50:24.181"></status>
</kw>
<msg timestamp="20151202 14:50:24.190" level="INFO">${status} = PASS</msg>
<msg timestamp="20151202 14:50:24.191" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151202 14:50:24.189" starttime="20151202 14:50:24.176"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.208" starttime="20151202 14:50:24.205"></status>
</kw>
<msg timestamp="20151202 14:50:24.211" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:50:24.210" starttime="20151202 14:50:24.194"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20151202 14:50:24.220" level="INFO">${version_r} =  6.2.0.30830 is running (PID:28716, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151202 14:50:24.218" starttime="20151202 14:50:24.214"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151202 14:50:24.228" level="INFO">${version} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151202 14:50:24.227" starttime="20151202 14:50:24.222"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.234" starttime="20151202 14:50:24.230"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.260" starttime="20151202 14:50:24.255"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.267" starttime="20151202 14:50:24.262"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:24.270" starttime="20151202 14:50:24.237"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.287" starttime="20151202 14:50:24.282"></status>
</kw>
<msg timestamp="20151202 14:50:24.290" level="INFO">${ver} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151202 14:50:24.289" starttime="20151202 14:50:24.273"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.299" starttime="20151202 14:50:24.295"></status>
</kw>
<msg timestamp="20151202 14:50:24.305" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20151202 14:50:24.307" level="INFO">${crce_version} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151202 14:50:24.302" starttime="20151202 14:50:23.693"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.395" starttime="20151202 14:50:24.394"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.452" starttime="20151202 14:50:24.402"></status>
</kw>
<msg timestamp="20151202 14:50:24.455" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20151202 14:50:24.454" starttime="20151202 14:50:24.397"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151202 14:50:24.476" level="INFO">Logging into '10.105.125.159:22' as 'qa_automation'.</msg>
<msg timestamp="20151202 14:50:24.623" level="INFO">Read output: Last login: Wed Dec  2 13:50:23 2015 from 10.105.80.196
[1m[qa_automation@ocs01.tb25 ~]$</msg>
<status status="PASS" endtime="20151202 14:50:24.625" starttime="20151202 14:50:24.472"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:24.627" starttime="20151202 14:50:24.460"></status>
</kw>
<msg timestamp="20151202 14:50:24.631" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20151202 14:50:24.630" starttime="20151202 14:50:24.384"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151202 14:50:24.643" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151202 14:50:24.642" starttime="20151202 14:50:24.634"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151202 14:50:24.649" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20151202 14:50:24.732" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151202 14:50:24.735" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp is running (PID: 6110)</msg>
<status status="PASS" endtime="20151202 14:50:24.734" starttime="20151202 14:50:24.646"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.748" starttime="20151202 14:50:24.743"></status>
</kw>
<msg timestamp="20151202 14:50:24.751" level="INFO">${status} = PASS</msg>
<msg timestamp="20151202 14:50:24.753" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151202 14:50:24.750" starttime="20151202 14:50:24.738"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.768" starttime="20151202 14:50:24.765"></status>
</kw>
<msg timestamp="20151202 14:50:24.771" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:50:24.770" starttime="20151202 14:50:24.755"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20151202 14:50:24.779" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp is running (PID: 6110)</msg>
<status status="PASS" endtime="20151202 14:50:24.778" starttime="20151202 14:50:24.774"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151202 14:50:24.787" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151202 14:50:24.786" starttime="20151202 14:50:24.782"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.793" starttime="20151202 14:50:24.790"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.817" starttime="20151202 14:50:24.813"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.823" starttime="20151202 14:50:24.819"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:24.827" starttime="20151202 14:50:24.796"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.842" starttime="20151202 14:50:24.838"></status>
</kw>
<msg timestamp="20151202 14:50:24.845" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151202 14:50:24.844" starttime="20151202 14:50:24.830"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.851" starttime="20151202 14:50:24.847"></status>
</kw>
<msg timestamp="20151202 14:50:24.855" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20151202 14:50:24.857" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151202 14:50:24.854" starttime="20151202 14:50:24.337"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:50:24.864" level="INFO">IN state= OK version= 1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151202 14:50:24.866" starttime="20151202 14:50:24.859"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:50:24.872" level="INFO">XDR state= OK version=I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151202 14:50:24.874" starttime="20151202 14:50:24.868"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:50:24.882" level="INFO">CRCE state= OK version= 6.2.0.30830 </msg>
<status status="PASS" endtime="20151202 14:50:24.883" starttime="20151202 14:50:24.876"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:50:24.886" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151202 14:50:24.887" starttime="20151202 14:50:24.884"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20151202 14:50:24.890" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:50:24.891" starttime="20151202 14:50:24.888"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20151202 14:50:24.894" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:50:24.894" starttime="20151202 14:50:24.892"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20151202 14:50:24.897" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:50:24.898" starttime="20151202 14:50:24.895"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20151202 14:50:24.901" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:50:24.901" starttime="20151202 14:50:24.899"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<msg timestamp="20151202 14:50:24.907" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes</msg>
<status status="PASS" endtime="20151202 14:50:24.907" starttime="20151202 14:50:24.902"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20151202 14:50:24.937" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes</msg>
<status status="PASS" endtime="20151202 14:50:24.938" starttime="20151202 14:50:24.908"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:24.939" starttime="20151202 14:50:17.816"></status>
</kw>
<test id="s1-t1" name="Run PP MOC 196s Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:24.953" starttime="20151202 14:50:24.952"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<msg timestamp="20151202 14:50:24.957" level="INFO">${INITIAL_BALANCE} = 0</msg>
<status status="PASS" endtime="20151202 14:50:24.956" starttime="20151202 14:50:24.955"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>POSTPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS PP DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20151202 14:50:24.973" level="INFO">msg=crce_host=10.105.125.159</msg>
<status status="PASS" endtime="20151202 14:50:24.973" starttime="20151202 14:50:24.971"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20151202 14:50:24.976" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20151202 14:50:24.977" starttime="20151202 14:50:24.974"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20151202 14:50:24.979" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20151202 14:50:24.980" starttime="20151202 14:50:24.978"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20151202 14:50:24.983" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20151202 14:50:24.983" starttime="20151202 14:50:24.981"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20151202 14:50:24.986" level="INFO">msg=imsiRangeStart=232201667725500</msg>
<status status="PASS" endtime="20151202 14:50:24.987" starttime="20151202 14:50:24.984"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20151202 14:50:24.989" level="INFO">msg=msisdnRangeStart=43667725500</msg>
<status status="PASS" endtime="20151202 14:50:24.990" starttime="20151202 14:50:24.987"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20151202 14:50:24.992" level="INFO">msg=type=POSTPAID</msg>
<status status="PASS" endtime="20151202 14:50:24.993" starttime="20151202 14:50:24.991"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20151202 14:50:24.995" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20151202 14:50:24.996" starttime="20151202 14:50:24.994"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20151202 14:50:24.999" level="INFO">msg=tariffId=101004</msg>
<status status="PASS" endtime="20151202 14:50:24.999" starttime="20151202 14:50:24.997"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20151202 14:50:25.002" level="INFO">msg=balance=0</msg>
<status status="PASS" endtime="20151202 14:50:25.003" starttime="20151202 14:50:25.000"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 14:50:25.017" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:50:25.018" starttime="20151202 14:50:25.014"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:25.019" starttime="20151202 14:50:25.012"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 14:50:25.024" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:50:25.025" starttime="20151202 14:50:25.022"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:25.026" starttime="20151202 14:50:25.020"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 14:50:25.031" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:50:25.032" starttime="20151202 14:50:25.029"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:25.033" starttime="20151202 14:50:25.027"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:25.034" starttime="20151202 14:50:25.005"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 14:50:25.038" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 14:50:25.039" starttime="20151202 14:50:25.035"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:25.042" starttime="20151202 14:50:25.040"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:25.045" starttime="20151202 14:50:25.043"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:25.048" starttime="20151202 14:50:25.046"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:25.051" starttime="20151202 14:50:25.049"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:25.053" starttime="20151202 14:50:25.052"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:25.056" starttime="20151202 14:50:25.054"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:25.059" starttime="20151202 14:50:25.057"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:25.062" starttime="20151202 14:50:25.060"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:25.065" starttime="20151202 14:50:25.063"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:25.068" starttime="20151202 14:50:25.066"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:25.071" starttime="20151202 14:50:25.069"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:25.074" starttime="20151202 14:50:25.072"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 14:50:25.078" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0']</msg>
<msg timestamp="20151202 14:50:30.204" level="INFO">14:50:25,248 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/ext] for external libraries
14:50:25,248 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
14:50:27,064 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
14:50:27,084 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.125.159]
14:50:27,084 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
14:50:27,084 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
14:50:27,084 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [2]
14:50:27,084 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [232201667725500]
14:50:27,085 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [43667725500]
14:50:27,085 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [POSTPAID]
14:50:27,085 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [1]
14:50:27,085 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101004]
14:50:27,085 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [0]
14:50:27,085 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
14:50:27,086 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
14:50:27,094 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
14:50:27,100 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
14:50:28,155 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
14:50:28,214 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
14:50:28,390 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:28,390 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
14:50:28,411 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:28,418 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:28,596 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:28,596 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:50:28,596 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:28,596 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
14:50:28,675 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
14:50:28,937 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
14:50:28,963 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
14:50:28,965 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:50:28,966 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:28,966 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
14:50:29,059 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:29,060 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:29,064 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:29,065 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:50:29,065 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:29,065 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
14:50:29,108 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
14:50:29,112 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
14:50:29,146 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
14:50:29,150 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:50:29,152 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:29,152 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
14:50:29,166 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:29,166 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:29,172 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:29,172 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:50:29,172 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:29,172 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
14:50:29,232 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
14:50:29,242 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
14:50:29,281 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
14:50:29,284 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:50:29,286 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:29,286 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
14:50:29,340 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:29,341 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:29,347 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:29,347 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:50:29,347 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:29,347 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
14:50:29,421 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
14:50:29,424 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
14:50:29,446 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
14:50:29,448 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:50:29,449 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:29,449 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
14:50:29,472 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:29,472 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:29,485 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:29,486 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:50:29,486 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:29,486 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
14:50:29,536 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
14:50:29,550 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
14:50:29,580 INFO  [SoapUITestCaseRunner] running step [setBalance]
14:50:29,583 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:50:29,584 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:29,584 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
14:50:29,624 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:29,624 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:29,633 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:29,633 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:50:29,633 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:29,633 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
14:50:29,690 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
14:50:29,699 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
14:50:29,738 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
14:50:29,776 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
14:50:29,778 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
14:50:29,779 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:50:29,781 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:29,781 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
14:50:29,798 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:29,798 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:29,815 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:29,815 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:50:29,815 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:29,815 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
14:50:29,816 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
14:50:29,841 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
14:50:29,842 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
14:50:29,845 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:50:29,846 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:29,847 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
14:50:29,937 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:29,937 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:29,943 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:29,943 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:50:29,943 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:29,943 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
14:50:29,944 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
14:50:29,949 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
14:50:29,950 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
14:50:29,953 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:50:29,954 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:29,954 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
14:50:29,962 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:29,962 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:29,968 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:29,968 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:50:29,968 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:29,968 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
14:50:29,969 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
14:50:29,979 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
14:50:29,979 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
14:50:29,982 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:50:29,984 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:29,984 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
14:50:30,017 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:30,017 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:30,023 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:30,023 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:50:30,023 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:30,023 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
14:50:30,024 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
14:50:30,029 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
14:50:30,030 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
14:50:30,032 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:50:30,034 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:30,034 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
14:50:30,045 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:30,045 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:30,057 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:30,057 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:50:30,057 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:30,057 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
14:50:30,058 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
14:50:30,078 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
14:50:30,079 INFO  [SoapUITestCaseRunner] running step [setBalance]
14:50:30,081 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
14:50:30,082 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
14:50:30,083 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
14:50:30,102 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
14:50:30,102 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
14:50:30,113 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
14:50:30,113 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
14:50:30,113 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
14:50:30,114 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
14:50:30,114 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
14:50:30,123 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
14:50:30,123 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
14:50:30,125 INFO  [SoapUITestCaseRunner] running step [finish_successful]
14:50:30,193 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
14:50:30,194 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 3045ms, status: FINISHED
14:50:30,195 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 3045ms</msg>
<status status="PASS" endtime="20151202 14:50:30.214" starttime="20151202 14:50:25.076"></status>
</kw>
<msg timestamp="20151202 14:50:30.221" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:50:30.222" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 14:50:30.217" starttime="20151202 14:50:25.075"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:50:30.255" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20151202 14:50:30.253" starttime="20151202 14:50:30.248"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:50:30.260" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:50:30.260" starttime="20151202 14:50:30.258"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:50:30.264" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:50:30.264" starttime="20151202 14:50:30.262"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:50:30.270" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:50:30.276" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20151202 14:50:30.276" starttime="20151202 14:50:30.268"></status>
</kw>
<msg timestamp="20151202 14:50:30.278" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:50:30.279" level="INFO">${return_log_entry} = 2015-12-02 14:50:30,193 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:50:30.277" starttime="20151202 14:50:30.266"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:30.288" starttime="20151202 14:50:30.285"></status>
</kw>
<msg timestamp="20151202 14:50:30.289" level="INFO">${return_log_entry} = 2015-12-02 14:50:30,193 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:50:30.288" starttime="20151202 14:50:30.280"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:30.297" starttime="20151202 14:50:30.295"></status>
</kw>
<msg timestamp="20151202 14:50:30.299" level="INFO">${return_log_entry} = 2015-12-02 14:50:30,193 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:50:30.298" starttime="20151202 14:50:30.290"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:30.308" starttime="20151202 14:50:30.305"></status>
</kw>
<msg timestamp="20151202 14:50:30.309" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:50:30.308" starttime="20151202 14:50:30.300"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:30.319" starttime="20151202 14:50:30.317"></status>
</kw>
<msg timestamp="20151202 14:50:30.321" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:50:30.320" starttime="20151202 14:50:30.310"></status>
</kw>
<msg timestamp="20151202 14:50:30.322" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:50:30.322" starttime="20151202 14:50:30.227"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:30.333" starttime="20151202 14:50:30.332"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:30.336" starttime="20151202 14:50:30.334"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:30.338" starttime="20151202 14:50:30.337"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 14:50:30.350" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 14:50:30.351" starttime="20151202 14:50:30.345"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:30.352" starttime="20151202 14:50:30.343"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:30.353" starttime="20151202 14:50:30.339"></status>
</kw>
<status status="PASS" endtime="20151202 14:50:30.354" starttime="20151202 14:50:30.324"></status>
</kw>
<msg timestamp="20151202 14:50:30.356" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20151202 14:50:30.355" starttime="20151202 14:50:24.959"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20151202 14:50:30.359" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:50:30.360" starttime="20151202 14:50:30.357"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Postpaid Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:50:30.362" level="INFO">Test Postpaid Subscribers Created!</msg>
<status status="PASS" endtime="20151202 14:50:30.363" starttime="20151202 14:50:30.361"></status>
</kw>
<kw type="kw" name="${calling_int} = BuiltIn.Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20151202 14:50:30.366" level="INFO">Argument types are:
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20151202 14:50:30.367" level="INFO">${calling_int} = 43667725500</msg>
<status status="PASS" endtime="20151202 14:50:30.366" starttime="20151202 14:50:30.364"></status>
</kw>
<kw type="kw" name="${called_party} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${calling_int}+1</arg>
</arguments>
<msg timestamp="20151202 14:50:30.372" level="INFO">${called_party} = 43667725501</msg>
<status status="PASS" endtime="20151202 14:50:30.372" starttime="20151202 14:50:30.368"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC 1s *******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:30.375" starttime="20151202 14:50:30.373"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:50:30.377" level="INFO">Running the MOC call...</msg>
<status status="PASS" endtime="20151202 14:50:30.378" starttime="20151202 14:50:30.376"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 196s">
<doc>Runs a standard MOC 196s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>${called_party}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc196s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20151202 14:50:30.410" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-subscribers.csv</msg>
<status status="PASS" endtime="20151202 14:50:30.410" starttime="20151202 14:50:30.408"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20151202 14:50:30.414" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv</msg>
<status status="PASS" endtime="20151202 14:50:30.413" starttime="20151202 14:50:30.411"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20151202 14:50:30.417" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini</msg>
<status status="PASS" endtime="20151202 14:50:30.416" starttime="20151202 14:50:30.415"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20151202 14:50:30.420" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc196s.cgs</msg>
<status status="PASS" endtime="20151202 14:50:30.420" starttime="20151202 14:50:30.418"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:30.423" starttime="20151202 14:50:30.421"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20151202 14:50:30.428" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:50:30.428" starttime="20151202 14:50:30.423"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:30.431" starttime="20151202 14:50:30.429"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20151202 14:50:30.434" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:50:30.435" starttime="20151202 14:50:30.432"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20151202 14:50:30.439" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:50:30.440" starttime="20151202 14:50:30.436"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:30.442" starttime="20151202 14:50:30.441"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20151202 14:50:30.446" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:50:30.447" starttime="20151202 14:50:30.443"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20151202 14:50:30.451" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:50:30.452" starttime="20151202 14:50:30.448"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:50:30.454" starttime="20151202 14:50:30.453"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20151202 14:50:30.465" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc196s.cgs /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc196s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20151202 14:53:52.798" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151202 14:53:52.790" starttime="20151202 14:50:30.455"></status>
</kw>
<msg timestamp="20151202 14:53:52.812" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151202 14:53:52.810" starttime="20151202 14:50:30.395"></status>
</kw>
<msg timestamp="20151202 14:53:52.817" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151202 14:53:52.814" starttime="20151202 14:50:30.381"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:53:52.823" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20151202 14:53:52.825" starttime="20151202 14:53:52.819"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20151202 14:53:52.832" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:53:52.834" starttime="20151202 14:53:52.827"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:52.839" starttime="20151202 14:53:52.836"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 14:53:52.897" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:53:52.898" starttime="20151202 14:53:52.892"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:52.900" starttime="20151202 14:53:52.888"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 14:53:52.910" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:53:52.912" starttime="20151202 14:53:52.906"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:52.914" starttime="20151202 14:53:52.902"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 14:53:52.924" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:53:52.925" starttime="20151202 14:53:52.919"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:52.927" starttime="20151202 14:53:52.916"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:52.929" starttime="20151202 14:53:52.874"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 14:53:52.937" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 14:53:52.938" starttime="20151202 14:53:52.931"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:52.944" starttime="20151202 14:53:52.940"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:52.950" starttime="20151202 14:53:52.946"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:52.956" starttime="20151202 14:53:52.952"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:52.961" starttime="20151202 14:53:52.958"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:52.966" starttime="20151202 14:53:52.963"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:52.972" starttime="20151202 14:53:52.968"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 14:53:52.980" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725500']</msg>
<msg timestamp="20151202 14:53:53.309" level="INFO">14:53:53,305 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
14:53:53,306 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
14:53:53,306 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166232
14:53:53,307 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500
14:53:53,307 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
14:53:53,308 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004
14:53:53,308 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID
14:53:53,308 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20151202 14:53:53.311" starttime="20151202 14:53:52.977"></status>
</kw>
<msg timestamp="20151202 14:53:53.313" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:53.313" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 14:53:53.312" starttime="20151202 14:53:52.974"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:53:53.325" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20151202 14:53:53.324" starttime="20151202 14:53:53.322"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.328" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:53:53.327" starttime="20151202 14:53:53.326"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.331" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:53:53.330" starttime="20151202 14:53:53.329"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.336" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:53:53.340" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:53:53.341" starttime="20151202 14:53:53.334"></status>
</kw>
<msg timestamp="20151202 14:53:53.342" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:53.343" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,305 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:53:53.342" starttime="20151202 14:53:53.332"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.351" starttime="20151202 14:53:53.349"></status>
</kw>
<msg timestamp="20151202 14:53:53.352" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,305 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:53:53.352" starttime="20151202 14:53:53.344"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.360" starttime="20151202 14:53:53.358"></status>
</kw>
<msg timestamp="20151202 14:53:53.361" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,305 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:53:53.361" starttime="20151202 14:53:53.354"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.369" starttime="20151202 14:53:53.367"></status>
</kw>
<msg timestamp="20151202 14:53:53.370" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:53:53.370" starttime="20151202 14:53:53.362"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.380" starttime="20151202 14:53:53.378"></status>
</kw>
<msg timestamp="20151202 14:53:53.382" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:53:53.381" starttime="20151202 14:53:53.371"></status>
</kw>
<msg timestamp="20151202 14:53:53.384" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:53:53.383" starttime="20151202 14:53:53.315"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:53:53.395" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20151202 14:53:53.394" starttime="20151202 14:53:53.392"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.398" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:53:53.398" starttime="20151202 14:53:53.396"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.401" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:53:53.401" starttime="20151202 14:53:53.399"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.406" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:53:53.410" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:53:53.411" starttime="20151202 14:53:53.404"></status>
</kw>
<msg timestamp="20151202 14:53:53.412" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:53.413" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,306 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 14:53:53.412" starttime="20151202 14:53:53.402"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.420" starttime="20151202 14:53:53.419"></status>
</kw>
<msg timestamp="20151202 14:53:53.422" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,306 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 14:53:53.421" starttime="20151202 14:53:53.414"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.429" starttime="20151202 14:53:53.428"></status>
</kw>
<msg timestamp="20151202 14:53:53.431" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,306 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151202 14:53:53.430" starttime="20151202 14:53:53.423"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.439" starttime="20151202 14:53:53.437"></status>
</kw>
<msg timestamp="20151202 14:53:53.440" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151202 14:53:53.440" starttime="20151202 14:53:53.432"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.451" starttime="20151202 14:53:53.449"></status>
</kw>
<msg timestamp="20151202 14:53:53.452" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151202 14:53:53.451" starttime="20151202 14:53:53.442"></status>
</kw>
<msg timestamp="20151202 14:53:53.454" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20151202 14:53:53.453" starttime="20151202 14:53:53.385"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:53:53.466" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20151202 14:53:53.466" starttime="20151202 14:53:53.463"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.469" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:53:53.469" starttime="20151202 14:53:53.467"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.473" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:53:53.472" starttime="20151202 14:53:53.470"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.478" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:53:53.482" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:53:53.482" starttime="20151202 14:53:53.476"></status>
</kw>
<msg timestamp="20151202 14:53:53.484" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:53.484" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,307 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 14:53:53.483" starttime="20151202 14:53:53.474"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.492" starttime="20151202 14:53:53.490"></status>
</kw>
<msg timestamp="20151202 14:53:53.493" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,307 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 14:53:53.492" starttime="20151202 14:53:53.485"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.501" starttime="20151202 14:53:53.499"></status>
</kw>
<msg timestamp="20151202 14:53:53.502" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,307 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151202 14:53:53.501" starttime="20151202 14:53:53.494"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.511" starttime="20151202 14:53:53.508"></status>
</kw>
<msg timestamp="20151202 14:53:53.512" level="INFO">${resultCode} = 232201667725500</msg>
<status status="PASS" endtime="20151202 14:53:53.512" starttime="20151202 14:53:53.503"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.522" starttime="20151202 14:53:53.521"></status>
</kw>
<msg timestamp="20151202 14:53:53.524" level="INFO">${resultCode} = 232201667725500</msg>
<status status="PASS" endtime="20151202 14:53:53.523" starttime="20151202 14:53:53.514"></status>
</kw>
<msg timestamp="20151202 14:53:53.525" level="INFO">${imsi} = 232201667725500</msg>
<status status="PASS" endtime="20151202 14:53:53.525" starttime="20151202 14:53:53.456"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:53:53.537" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20151202 14:53:53.536" starttime="20151202 14:53:53.534"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.540" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:53:53.540" starttime="20151202 14:53:53.538"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.543" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:53:53.543" starttime="20151202 14:53:53.541"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.548" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:53:53.552" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:53:53.553" starttime="20151202 14:53:53.546"></status>
</kw>
<msg timestamp="20151202 14:53:53.554" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:53.555" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,306 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166232</msg>
<status status="PASS" endtime="20151202 14:53:53.554" starttime="20151202 14:53:53.544"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.562" starttime="20151202 14:53:53.560"></status>
</kw>
<msg timestamp="20151202 14:53:53.563" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,306 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166232</msg>
<status status="PASS" endtime="20151202 14:53:53.563" starttime="20151202 14:53:53.556"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.571" starttime="20151202 14:53:53.569"></status>
</kw>
<msg timestamp="20151202 14:53:53.572" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,306 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=166232</msg>
<status status="PASS" endtime="20151202 14:53:53.572" starttime="20151202 14:53:53.564"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.580" starttime="20151202 14:53:53.578"></status>
</kw>
<msg timestamp="20151202 14:53:53.582" level="INFO">${resultCode} = 166232</msg>
<status status="PASS" endtime="20151202 14:53:53.581" starttime="20151202 14:53:53.573"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.592" starttime="20151202 14:53:53.590"></status>
</kw>
<msg timestamp="20151202 14:53:53.594" level="INFO">${resultCode} = 166232</msg>
<status status="PASS" endtime="20151202 14:53:53.593" starttime="20151202 14:53:53.583"></status>
</kw>
<msg timestamp="20151202 14:53:53.595" level="INFO">${id} = 166232</msg>
<status status="PASS" endtime="20151202 14:53:53.595" starttime="20151202 14:53:53.527"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:53:53.608" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20151202 14:53:53.607" starttime="20151202 14:53:53.605"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.611" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:53:53.610" starttime="20151202 14:53:53.609"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.614" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:53:53.613" starttime="20151202 14:53:53.612"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.619" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:53:53.624" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:53:53.624" starttime="20151202 14:53:53.617"></status>
</kw>
<msg timestamp="20151202 14:53:53.626" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:53.626" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,307 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 14:53:53.625" starttime="20151202 14:53:53.615"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.634" starttime="20151202 14:53:53.632"></status>
</kw>
<msg timestamp="20151202 14:53:53.635" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,307 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 14:53:53.635" starttime="20151202 14:53:53.627"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.642" starttime="20151202 14:53:53.641"></status>
</kw>
<msg timestamp="20151202 14:53:53.644" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,307 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151202 14:53:53.643" starttime="20151202 14:53:53.636"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.652" starttime="20151202 14:53:53.649"></status>
</kw>
<msg timestamp="20151202 14:53:53.653" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151202 14:53:53.652" starttime="20151202 14:53:53.645"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.663" starttime="20151202 14:53:53.661"></status>
</kw>
<msg timestamp="20151202 14:53:53.664" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151202 14:53:53.663" starttime="20151202 14:53:53.654"></status>
</kw>
<msg timestamp="20151202 14:53:53.666" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20151202 14:53:53.665" starttime="20151202 14:53:53.597"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:53:53.677" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20151202 14:53:53.677" starttime="20151202 14:53:53.674"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.680" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:53:53.680" starttime="20151202 14:53:53.678"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.683" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:53:53.683" starttime="20151202 14:53:53.681"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.688" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:53:53.693" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:53:53.693" starttime="20151202 14:53:53.686"></status>
</kw>
<msg timestamp="20151202 14:53:53.695" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:53.695" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,308 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 14:53:53.694" starttime="20151202 14:53:53.684"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.703" starttime="20151202 14:53:53.701"></status>
</kw>
<msg timestamp="20151202 14:53:53.704" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,308 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 14:53:53.703" starttime="20151202 14:53:53.696"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.711" starttime="20151202 14:53:53.709"></status>
</kw>
<msg timestamp="20151202 14:53:53.712" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,308 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151202 14:53:53.712" starttime="20151202 14:53:53.705"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.720" starttime="20151202 14:53:53.718"></status>
</kw>
<msg timestamp="20151202 14:53:53.721" level="INFO">${resultCode} = 101004</msg>
<status status="PASS" endtime="20151202 14:53:53.721" starttime="20151202 14:53:53.713"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.733" starttime="20151202 14:53:53.731"></status>
</kw>
<msg timestamp="20151202 14:53:53.734" level="INFO">${resultCode} = 101004</msg>
<status status="PASS" endtime="20151202 14:53:53.734" starttime="20151202 14:53:53.722"></status>
</kw>
<msg timestamp="20151202 14:53:53.736" level="INFO">${tariffId} = 101004</msg>
<status status="PASS" endtime="20151202 14:53:53.735" starttime="20151202 14:53:53.667"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:53:53.747" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20151202 14:53:53.747" starttime="20151202 14:53:53.744"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.750" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:53:53.750" starttime="20151202 14:53:53.748"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.753" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:53:53.753" starttime="20151202 14:53:53.751"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.759" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:53:53.763" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151202 14:53:53.764" starttime="20151202 14:53:53.756"></status>
</kw>
<msg timestamp="20151202 14:53:53.765" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:53.766" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,308 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 14:53:53.765" starttime="20151202 14:53:53.754"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.773" starttime="20151202 14:53:53.771"></status>
</kw>
<msg timestamp="20151202 14:53:53.774" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,308 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 14:53:53.774" starttime="20151202 14:53:53.767"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.781" starttime="20151202 14:53:53.780"></status>
</kw>
<msg timestamp="20151202 14:53:53.783" level="INFO">${return_log_entry} = 2015-12-02 14:53:53,308 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151202 14:53:53.782" starttime="20151202 14:53:53.775"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.792" starttime="20151202 14:53:53.788"></status>
</kw>
<msg timestamp="20151202 14:53:53.793" level="INFO">${resultCode} = POSTPAID</msg>
<status status="PASS" endtime="20151202 14:53:53.792" starttime="20151202 14:53:53.784"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.802" starttime="20151202 14:53:53.801"></status>
</kw>
<msg timestamp="20151202 14:53:53.804" level="INFO">${resultCode} = POSTPAID</msg>
<status status="PASS" endtime="20151202 14:53:53.803" starttime="20151202 14:53:53.794"></status>
</kw>
<msg timestamp="20151202 14:53:53.805" level="INFO">${type} = POSTPAID</msg>
<status status="PASS" endtime="20151202 14:53:53.805" starttime="20151202 14:53:53.738"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.839" starttime="20151202 14:53:53.836"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.842" starttime="20151202 14:53:53.840"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.844" starttime="20151202 14:53:53.843"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 14:53:53.860" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 14:53:53.860" starttime="20151202 14:53:53.854"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:53.861" starttime="20151202 14:53:53.852"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:53.862" starttime="20151202 14:53:53.846"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:53.863" starttime="20151202 14:53:53.807"></status>
</kw>
<msg timestamp="20151202 14:53:53.867" level="INFO">${rc} = OK</msg>
<msg timestamp="20151202 14:53:53.868" level="INFO">${provId} = 1</msg>
<msg timestamp="20151202 14:53:53.868" level="INFO">${imsi} = 232201667725500</msg>
<msg timestamp="20151202 14:53:53.869" level="INFO">${id} = 166232</msg>
<msg timestamp="20151202 14:53:53.869" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20151202 14:53:53.870" level="INFO">${tariffId} = 101004</msg>
<msg timestamp="20151202 14:53:53.870" level="INFO">${type} = POSTPAID</msg>
<status status="PASS" endtime="20151202 14:53:53.866" starttime="20151202 14:53:52.848"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.893" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:53:53.894" starttime="20151202 14:53:53.891"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:53.895" starttime="20151202 14:53:53.889"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.899" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:53:53.900" starttime="20151202 14:53:53.897"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:53.901" starttime="20151202 14:53:53.896"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.906" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151202 14:53:53.906" starttime="20151202 14:53:53.903"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:53.907" starttime="20151202 14:53:53.902"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:53.908" starttime="20151202 14:53:53.882"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151202 14:53:53.912" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151202 14:53:53.912" starttime="20151202 14:53:53.909"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.915" starttime="20151202 14:53:53.913"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.918" starttime="20151202 14:53:53.916"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.921" starttime="20151202 14:53:53.919"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.923" starttime="20151202 14:53:53.922"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.925" starttime="20151202 14:53:53.924"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:53.928" starttime="20151202 14:53:53.926"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151202 14:53:53.932" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725500', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=166232']</msg>
<msg timestamp="20151202 14:53:54.148" level="INFO">14:53:54,145 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
14:53:54,145 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166233
14:53:54,146 INFO  [log] LowLevelOps.getMainAccount.output.balance=300000
14:53:54,146 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
14:53:54,147 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 14:53:54.149" starttime="20151202 14:53:53.930"></status>
</kw>
<msg timestamp="20151202 14:53:54.152" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:54.152" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151202 14:53:54.151" starttime="20151202 14:53:53.929"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:53:54.166" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20151202 14:53:54.166" starttime="20151202 14:53:54.161"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.169" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:53:54.169" starttime="20151202 14:53:54.167"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.173" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:53:54.172" starttime="20151202 14:53:54.170"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.177" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:53:54.181" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 14:53:54.182" starttime="20151202 14:53:54.175"></status>
</kw>
<msg timestamp="20151202 14:53:54.183" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:54.184" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,145 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:53:54.183" starttime="20151202 14:53:54.174"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.192" starttime="20151202 14:53:54.190"></status>
</kw>
<msg timestamp="20151202 14:53:54.193" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,145 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:53:54.193" starttime="20151202 14:53:54.185"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.201" starttime="20151202 14:53:54.199"></status>
</kw>
<msg timestamp="20151202 14:53:54.203" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,145 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151202 14:53:54.202" starttime="20151202 14:53:54.194"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.211" starttime="20151202 14:53:54.209"></status>
</kw>
<msg timestamp="20151202 14:53:54.212" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:53:54.212" starttime="20151202 14:53:54.204"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.222" starttime="20151202 14:53:54.220"></status>
</kw>
<msg timestamp="20151202 14:53:54.223" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:53:54.223" starttime="20151202 14:53:54.213"></status>
</kw>
<msg timestamp="20151202 14:53:54.225" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151202 14:53:54.224" starttime="20151202 14:53:54.154"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:53:54.236" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20151202 14:53:54.235" starttime="20151202 14:53:54.233"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.239" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:53:54.238" starttime="20151202 14:53:54.237"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.242" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:53:54.241" starttime="20151202 14:53:54.240"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.246" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:53:54.250" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 14:53:54.251" starttime="20151202 14:53:54.244"></status>
</kw>
<msg timestamp="20151202 14:53:54.252" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:54.253" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,145 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166233</msg>
<status status="PASS" endtime="20151202 14:53:54.252" starttime="20151202 14:53:54.243"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.260" starttime="20151202 14:53:54.259"></status>
</kw>
<msg timestamp="20151202 14:53:54.262" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,145 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166233</msg>
<status status="PASS" endtime="20151202 14:53:54.261" starttime="20151202 14:53:54.254"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.269" starttime="20151202 14:53:54.267"></status>
</kw>
<msg timestamp="20151202 14:53:54.270" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,145 INFO  [log] LowLevelOps.getMainAccount.output.accountId=166233</msg>
<status status="PASS" endtime="20151202 14:53:54.269" starttime="20151202 14:53:54.263"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.278" starttime="20151202 14:53:54.275"></status>
</kw>
<msg timestamp="20151202 14:53:54.279" level="INFO">${resultCode} = 166233</msg>
<status status="PASS" endtime="20151202 14:53:54.278" starttime="20151202 14:53:54.271"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.288" starttime="20151202 14:53:54.287"></status>
</kw>
<msg timestamp="20151202 14:53:54.289" level="INFO">${resultCode} = 166233</msg>
<status status="PASS" endtime="20151202 14:53:54.289" starttime="20151202 14:53:54.280"></status>
</kw>
<msg timestamp="20151202 14:53:54.291" level="INFO">${accountId} = 166233</msg>
<status status="PASS" endtime="20151202 14:53:54.291" starttime="20151202 14:53:54.227"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:53:54.302" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20151202 14:53:54.301" starttime="20151202 14:53:54.299"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.305" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:53:54.304" starttime="20151202 14:53:54.303"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.307" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:53:54.307" starttime="20151202 14:53:54.305"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.312" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:53:54.316" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 14:53:54.317" starttime="20151202 14:53:54.310"></status>
</kw>
<msg timestamp="20151202 14:53:54.318" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:54.318" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,146 INFO  [log] LowLevelOps.getMainAccount.output.balance=300000</msg>
<status status="PASS" endtime="20151202 14:53:54.317" starttime="20151202 14:53:54.308"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.326" starttime="20151202 14:53:54.324"></status>
</kw>
<msg timestamp="20151202 14:53:54.327" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,146 INFO  [log] LowLevelOps.getMainAccount.output.balance=300000</msg>
<status status="PASS" endtime="20151202 14:53:54.326" starttime="20151202 14:53:54.319"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.334" starttime="20151202 14:53:54.332"></status>
</kw>
<msg timestamp="20151202 14:53:54.335" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,146 INFO  [log] LowLevelOps.getMainAccount.output.balance=300000</msg>
<status status="PASS" endtime="20151202 14:53:54.335" starttime="20151202 14:53:54.328"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.343" starttime="20151202 14:53:54.341"></status>
</kw>
<msg timestamp="20151202 14:53:54.344" level="INFO">${resultCode} = 300000</msg>
<status status="PASS" endtime="20151202 14:53:54.344" starttime="20151202 14:53:54.336"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.354" starttime="20151202 14:53:54.352"></status>
</kw>
<msg timestamp="20151202 14:53:54.355" level="INFO">${resultCode} = 300000</msg>
<status status="PASS" endtime="20151202 14:53:54.354" starttime="20151202 14:53:54.345"></status>
</kw>
<msg timestamp="20151202 14:53:54.356" level="INFO">${balance} = 300000</msg>
<status status="PASS" endtime="20151202 14:53:54.356" starttime="20151202 14:53:54.293"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:53:54.367" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20151202 14:53:54.366" starttime="20151202 14:53:54.364"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.370" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:53:54.369" starttime="20151202 14:53:54.368"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.373" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:53:54.372" starttime="20151202 14:53:54.371"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.378" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:53:54.381" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 14:53:54.382" starttime="20151202 14:53:54.375"></status>
</kw>
<msg timestamp="20151202 14:53:54.384" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:54.384" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,146 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 14:53:54.383" starttime="20151202 14:53:54.374"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.391" starttime="20151202 14:53:54.390"></status>
</kw>
<msg timestamp="20151202 14:53:54.393" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,146 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 14:53:54.392" starttime="20151202 14:53:54.385"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.399" starttime="20151202 14:53:54.398"></status>
</kw>
<msg timestamp="20151202 14:53:54.401" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,146 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151202 14:53:54.400" starttime="20151202 14:53:54.394"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.408" starttime="20151202 14:53:54.406"></status>
</kw>
<msg timestamp="20151202 14:53:54.409" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151202 14:53:54.409" starttime="20151202 14:53:54.402"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.418" starttime="20151202 14:53:54.417"></status>
</kw>
<msg timestamp="20151202 14:53:54.420" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151202 14:53:54.419" starttime="20151202 14:53:54.410"></status>
</kw>
<msg timestamp="20151202 14:53:54.421" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20151202 14:53:54.421" starttime="20151202 14:53:54.358"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151202 14:53:54.432" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20151202 14:53:54.431" starttime="20151202 14:53:54.429"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.435" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151202 14:53:54.434" starttime="20151202 14:53:54.433"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.438" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151202 14:53:54.437" starttime="20151202 14:53:54.436"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.443" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151202 14:53:54.446" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151202 14:53:54.447" starttime="20151202 14:53:54.440"></status>
</kw>
<msg timestamp="20151202 14:53:54.448" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151202 14:53:54.448" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,147 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 14:53:54.448" starttime="20151202 14:53:54.439"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.455" starttime="20151202 14:53:54.454"></status>
</kw>
<msg timestamp="20151202 14:53:54.457" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,147 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 14:53:54.456" starttime="20151202 14:53:54.449"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.463" starttime="20151202 14:53:54.462"></status>
</kw>
<msg timestamp="20151202 14:53:54.464" level="INFO">${return_log_entry} = 2015-12-02 14:53:54,147 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151202 14:53:54.464" starttime="20151202 14:53:54.458"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.472" starttime="20151202 14:53:54.470"></status>
</kw>
<msg timestamp="20151202 14:53:54.473" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151202 14:53:54.472" starttime="20151202 14:53:54.465"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.482" starttime="20151202 14:53:54.480"></status>
</kw>
<msg timestamp="20151202 14:53:54.483" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151202 14:53:54.482" starttime="20151202 14:53:54.474"></status>
</kw>
<msg timestamp="20151202 14:53:54.484" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20151202 14:53:54.484" starttime="20151202 14:53:54.423"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.493" starttime="20151202 14:53:54.492"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.495" starttime="20151202 14:53:54.494"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151202 14:53:54.498" starttime="20151202 14:53:54.496"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151202 14:53:54.508" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_LongDuration196s/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151202 14:53:54.509" starttime="20151202 14:53:54.504"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:54.510" starttime="20151202 14:53:54.503"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:54.511" starttime="20151202 14:53:54.498"></status>
</kw>
<status status="PASS" endtime="20151202 14:53:54.512" starttime="20151202 14:53:54.486"></status>
</kw>
<msg timestamp="20151202 14:53:54.514" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20151202 14:53:54.515" level="INFO">${accId} = 166233</msg>
<msg timestamp="20151202 14:53:54.515" level="INFO">${bal} = 300000</msg>
<msg timestamp="20151202 14:53:54.516" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20151202 14:53:54.516" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20151202 14:53:54.513" starttime="20151202 14:53:53.873"></status>
</kw>
<kw type="kw" name="${target_bal} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>4*${TESTSUBCRIBERS PP DEFAULT SLICE COSTS}</arg>
</arguments>
<msg timestamp="20151202 14:53:54.521" level="INFO">${target_bal} = 300000</msg>
<status status="PASS" endtime="20151202 14:53:54.521" starttime="20151202 14:53:54.517"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<msg timestamp="20151202 14:53:54.524" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151202 14:53:54.525" starttime="20151202 14:53:54.522"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check OK!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151202 14:53:54.527" level="INFO">Account balance check OK!</msg>
<status status="PASS" endtime="20151202 14:53:54.528" starttime="20151202 14:53:54.526"></status>
</kw>
<doc>Test will make a postpaid subscriber's MOC call, duration 196s.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>mTel_PPLIGHT_TB25_supported</tag>
<tag>POSTPAID_only</tag>
</tags>
<status status="PASS" critical="yes" endtime="20151202 14:53:54.529" starttime="20151202 14:50:24.942"></status>
</test>
<doc>Testing the postaid MOC call, duration is 196s - longer than one slice (more than 60s)

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20151202 14:53:54.534" starttime="20151202 14:50:15.568"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">matko.sanseovic</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">MOC_only</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">mTel_PPLIGHT_TB25_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">POSTPAID_only</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="MOC POSTPAID ONNET-LongDuration196s-robot-suite">MOC POSTPAID ONNET-LongDuration196s-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
