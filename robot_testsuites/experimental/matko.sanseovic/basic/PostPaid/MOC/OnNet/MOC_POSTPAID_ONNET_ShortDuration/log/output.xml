<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20151204 08:10:34.537">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/MOC_POSTPAID_ONNET-ShortDuration-robot-suite.txt" id="s1" name="MOC POSTPAID ONNET-ShortDuration-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20151204 08:10:39.351" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20151204 08:10:39.742" level="INFO">${date} = Fri Dec  4 08:10:39 CET 2015</msg>
<status status="PASS" endtime="20151204 08:10:39.740" starttime="20151204 08:10:39.186"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151204 08:10:39.755" level="INFO">Date and time: Fri Dec  4 08:10:39 CET 2015</msg>
<status status="PASS" endtime="20151204 08:10:39.758" starttime="20151204 08:10:39.748"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151204 08:10:39.769" level="INFO">Target IN machine: 10.105.125.135</msg>
<status status="PASS" endtime="20151204 08:10:39.772" starttime="20151204 08:10:39.763"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:39.923" starttime="20151204 08:10:39.920"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:40.555" starttime="20151204 08:10:39.973"></status>
</kw>
<msg timestamp="20151204 08:10:40.563" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151204 08:10:40.560" starttime="20151204 08:10:39.925"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151204 08:10:40.593" level="INFO">Logging into '10.105.125.135:22' as 'qa_automation'.</msg>
<msg timestamp="20151204 08:10:40.832" level="INFO">Read output: Last login: Fri Dec  4 07:10:11 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb25 ~]$</msg>
<status status="PASS" endtime="20151204 08:10:40.835" starttime="20151204 08:10:40.586"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:40.838" starttime="20151204 08:10:40.568"></status>
</kw>
<msg timestamp="20151204 08:10:40.846" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151204 08:10:40.843" starttime="20151204 08:10:39.902"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151204 08:10:40.862" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151204 08:10:40.860" starttime="20151204 08:10:40.849"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151204 08:10:40.872" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20151204 08:10:41.097" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151204 08:10:41.103" level="INFO">${output} = I-New MVNA MTel - Core - Service 1.0.0 2015.11.12-14:31:57 is running PID: 20551 </msg>
<status status="PASS" endtime="20151204 08:10:41.100" starttime="20151204 08:10:40.866"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:41.120" starttime="20151204 08:10:41.113"></status>
</kw>
<msg timestamp="20151204 08:10:41.124" level="INFO">${status} = PASS</msg>
<msg timestamp="20151204 08:10:41.126" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151204 08:10:41.122" starttime="20151204 08:10:41.107"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:41.146" starttime="20151204 08:10:41.142"></status>
</kw>
<msg timestamp="20151204 08:10:41.150" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:10:41.148" starttime="20151204 08:10:41.129"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20151204 08:10:41.160" level="INFO">${version_r} =  1.0.0 2015.11.12-14:31:57 is running PID: 20551 </msg>
<status status="PASS" endtime="20151204 08:10:41.159" starttime="20151204 08:10:41.153"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151204 08:10:41.171" level="INFO">${version} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151204 08:10:41.170" starttime="20151204 08:10:41.164"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:41.201" starttime="20151204 08:10:41.197"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:41.236" starttime="20151204 08:10:41.231"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151204 08:10:41.246" starttime="20151204 08:10:41.240"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:41.251" starttime="20151204 08:10:41.205"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:41.271" starttime="20151204 08:10:41.266"></status>
</kw>
<msg timestamp="20151204 08:10:41.275" level="INFO">${ver} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151204 08:10:41.273" starttime="20151204 08:10:41.255"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:41.283" starttime="20151204 08:10:41.278"></status>
</kw>
<msg timestamp="20151204 08:10:41.291" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20151204 08:10:41.292" level="INFO">${in_version} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151204 08:10:41.288" starttime="20151204 08:10:39.834"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:41.407" starttime="20151204 08:10:41.405"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:41.462" starttime="20151204 08:10:41.415"></status>
</kw>
<msg timestamp="20151204 08:10:41.466" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151204 08:10:41.465" starttime="20151204 08:10:41.408"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151204 08:10:41.489" level="INFO">Logging into '10.105.125.171:22' as 'qa_automation'.</msg>
<msg timestamp="20151204 08:10:41.736" level="INFO">Read output: Last login: Fri Dec  4 07:10:20 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb25 ~]$</msg>
<status status="PASS" endtime="20151204 08:10:41.738" starttime="20151204 08:10:41.483"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:41.741" starttime="20151204 08:10:41.470"></status>
</kw>
<msg timestamp="20151204 08:10:41.746" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151204 08:10:41.744" starttime="20151204 08:10:41.392"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151204 08:10:41.755" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151204 08:10:41.755" starttime="20151204 08:10:41.750"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151204 08:10:41.759" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20151204 08:10:41.965" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151204 08:10:41.969" level="INFO">${output} = I-New UMS MVNO - XDR 6.2.0 is running PID: 5581 </msg>
<status status="PASS" endtime="20151204 08:10:41.967" starttime="20151204 08:10:41.757"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:41.985" starttime="20151204 08:10:41.978"></status>
</kw>
<msg timestamp="20151204 08:10:41.989" level="INFO">${status} = PASS</msg>
<msg timestamp="20151204 08:10:41.990" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151204 08:10:41.988" starttime="20151204 08:10:41.972"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.011" starttime="20151204 08:10:42.006"></status>
</kw>
<msg timestamp="20151204 08:10:42.016" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:10:42.013" starttime="20151204 08:10:41.994"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20151204 08:10:42.026" level="INFO">${version_r} = I-New UMS MVNO - XDR 6.2.0 is running PID: 5581 </msg>
<status status="PASS" endtime="20151204 08:10:42.024" starttime="20151204 08:10:42.019"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151204 08:10:42.036" level="INFO">${version} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151204 08:10:42.034" starttime="20151204 08:10:42.029"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.043" starttime="20151204 08:10:42.039"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.076" starttime="20151204 08:10:42.070"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.088" starttime="20151204 08:10:42.079"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:42.090" starttime="20151204 08:10:42.046"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.113" starttime="20151204 08:10:42.108"></status>
</kw>
<msg timestamp="20151204 08:10:42.117" level="INFO">${ver} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151204 08:10:42.115" starttime="20151204 08:10:42.094"></status>
</kw>
<msg timestamp="20151204 08:10:42.125" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20151204 08:10:42.127" level="INFO">${xdr_version} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151204 08:10:42.122" starttime="20151204 08:10:41.339"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.276" starttime="20151204 08:10:42.272"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.350" starttime="20151204 08:10:42.293"></status>
</kw>
<msg timestamp="20151204 08:10:42.354" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151204 08:10:42.353" starttime="20151204 08:10:42.279"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151204 08:10:42.377" level="INFO">Logging into '10.105.125.159:22' as 'qa_automation'.</msg>
<msg timestamp="20151204 08:10:42.579" level="INFO">Read output: Last login: Fri Dec  4 07:10:16 2015 from 10.105.80.196
[1m[qa_automation@ocs01.tb25 ~]$</msg>
<status status="PASS" endtime="20151204 08:10:42.581" starttime="20151204 08:10:42.371"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:42.584" starttime="20151204 08:10:42.358"></status>
</kw>
<msg timestamp="20151204 08:10:42.589" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151204 08:10:42.587" starttime="20151204 08:10:42.250"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151204 08:10:42.604" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151204 08:10:42.602" starttime="20151204 08:10:42.592"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151204 08:10:42.613" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20151204 08:10:42.703" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151204 08:10:42.706" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.2.0.30830
Negret Rating &amp; Charging Engine 6.2.0.30830 is running (PID:28716, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151204 08:10:42.705" starttime="20151204 08:10:42.607"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.723" starttime="20151204 08:10:42.716"></status>
</kw>
<msg timestamp="20151204 08:10:42.727" level="INFO">${status} = PASS</msg>
<msg timestamp="20151204 08:10:42.729" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151204 08:10:42.726" starttime="20151204 08:10:42.710"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.748" starttime="20151204 08:10:42.744"></status>
</kw>
<msg timestamp="20151204 08:10:42.751" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:10:42.750" starttime="20151204 08:10:42.732"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20151204 08:10:42.761" level="INFO">${version_r} =  6.2.0.30830 is running (PID:28716, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151204 08:10:42.760" starttime="20151204 08:10:42.755"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151204 08:10:42.770" level="INFO">${version} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151204 08:10:42.769" starttime="20151204 08:10:42.764"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.777" starttime="20151204 08:10:42.773"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.809" starttime="20151204 08:10:42.804"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.819" starttime="20151204 08:10:42.812"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:42.821" starttime="20151204 08:10:42.780"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.839" starttime="20151204 08:10:42.835"></status>
</kw>
<msg timestamp="20151204 08:10:42.843" level="INFO">${ver} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151204 08:10:42.842" starttime="20151204 08:10:42.824"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.851" starttime="20151204 08:10:42.846"></status>
</kw>
<msg timestamp="20151204 08:10:42.858" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20151204 08:10:42.861" level="INFO">${crce_version} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151204 08:10:42.855" starttime="20151204 08:10:42.174"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:42.945" starttime="20151204 08:10:42.943"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:43.056" starttime="20151204 08:10:42.963"></status>
</kw>
<msg timestamp="20151204 08:10:43.066" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20151204 08:10:43.062" starttime="20151204 08:10:42.947"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151204 08:10:43.091" level="INFO">Logging into '10.105.125.159:22' as 'qa_automation'.</msg>
<msg timestamp="20151204 08:10:43.212" level="INFO">Read output: Last login: Fri Dec  4 07:10:42 2015 from 10.105.80.196
[1m[qa_automation@ocs01.tb25 ~]$</msg>
<status status="PASS" endtime="20151204 08:10:43.215" starttime="20151204 08:10:43.085"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:43.218" starttime="20151204 08:10:43.069"></status>
</kw>
<msg timestamp="20151204 08:10:43.224" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20151204 08:10:43.221" starttime="20151204 08:10:42.931"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151204 08:10:43.995" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151204 08:10:43.993" starttime="20151204 08:10:43.228"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151204 08:10:44.010" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20151204 08:10:44.069" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151204 08:10:44.072" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp is running (PID: 6110)</msg>
<status status="PASS" endtime="20151204 08:10:44.071" starttime="20151204 08:10:44.002"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.089" starttime="20151204 08:10:44.082"></status>
</kw>
<msg timestamp="20151204 08:10:44.093" level="INFO">${status} = PASS</msg>
<msg timestamp="20151204 08:10:44.094" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151204 08:10:44.092" starttime="20151204 08:10:44.076"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.114" starttime="20151204 08:10:44.110"></status>
</kw>
<msg timestamp="20151204 08:10:44.118" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:10:44.117" starttime="20151204 08:10:44.098"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20151204 08:10:44.128" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp is running (PID: 6110)</msg>
<status status="PASS" endtime="20151204 08:10:44.127" starttime="20151204 08:10:44.122"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151204 08:10:44.139" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151204 08:10:44.137" starttime="20151204 08:10:44.132"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.146" starttime="20151204 08:10:44.142"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.180" starttime="20151204 08:10:44.175"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.187" starttime="20151204 08:10:44.183"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:44.192" starttime="20151204 08:10:44.150"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.211" starttime="20151204 08:10:44.206"></status>
</kw>
<msg timestamp="20151204 08:10:44.216" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151204 08:10:44.214" starttime="20151204 08:10:44.195"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.227" starttime="20151204 08:10:44.220"></status>
</kw>
<msg timestamp="20151204 08:10:44.237" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20151204 08:10:44.238" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151204 08:10:44.234" starttime="20151204 08:10:42.889"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151204 08:10:44.248" level="INFO">IN state= OK version= 1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151204 08:10:44.251" starttime="20151204 08:10:44.242"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151204 08:10:44.261" level="INFO">XDR state= OK version=I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151204 08:10:44.263" starttime="20151204 08:10:44.254"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151204 08:10:44.272" level="INFO">CRCE state= OK version= 6.2.0.30830 </msg>
<status status="PASS" endtime="20151204 08:10:44.275" starttime="20151204 08:10:44.266"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151204 08:10:44.284" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151204 08:10:44.286" starttime="20151204 08:10:44.277"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20151204 08:10:44.295" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151204 08:10:44.297" starttime="20151204 08:10:44.289"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20151204 08:10:44.305" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151204 08:10:44.306" starttime="20151204 08:10:44.299"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20151204 08:10:44.315" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151204 08:10:44.317" starttime="20151204 08:10:44.309"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20151204 08:10:44.325" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151204 08:10:44.326" starttime="20151204 08:10:44.319"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.343" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes</msg>
<status status="PASS" endtime="20151204 08:10:44.341" starttime="20151204 08:10:44.329"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.352" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes</msg>
<status status="PASS" endtime="20151204 08:10:44.354" starttime="20151204 08:10:44.346"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:44.356" starttime="20151204 08:10:39.173"></status>
</kw>
<test id="s1-t1" name="Run PP MOC Short Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.383" starttime="20151204 08:10:44.381"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<msg timestamp="20151204 08:10:44.387" level="INFO">${INITIAL_BALANCE} = 0</msg>
<status status="PASS" endtime="20151204 08:10:44.386" starttime="20151204 08:10:44.384"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>2</arg>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>POSTPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS PP DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.409" level="INFO">msg=crce_host=10.105.125.159</msg>
<status status="PASS" endtime="20151204 08:10:44.410" starttime="20151204 08:10:44.406"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.413" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20151204 08:10:44.414" starttime="20151204 08:10:44.411"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.417" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20151204 08:10:44.418" starttime="20151204 08:10:44.415"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.421" level="INFO">msg=amount=2</msg>
<status status="PASS" endtime="20151204 08:10:44.422" starttime="20151204 08:10:44.419"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.425" level="INFO">msg=imsiRangeStart=232201667725500</msg>
<status status="PASS" endtime="20151204 08:10:44.426" starttime="20151204 08:10:44.423"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.429" level="INFO">msg=msisdnRangeStart=43667725500</msg>
<status status="PASS" endtime="20151204 08:10:44.430" starttime="20151204 08:10:44.427"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.434" level="INFO">msg=type=POSTPAID</msg>
<status status="PASS" endtime="20151204 08:10:44.434" starttime="20151204 08:10:44.431"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.438" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20151204 08:10:44.439" starttime="20151204 08:10:44.436"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.442" level="INFO">msg=tariffId=101004</msg>
<status status="PASS" endtime="20151204 08:10:44.442" starttime="20151204 08:10:44.440"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.446" level="INFO">msg=balance=0</msg>
<status status="PASS" endtime="20151204 08:10:44.446" starttime="20151204 08:10:44.444"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.478" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:10:44.479" starttime="20151204 08:10:44.460"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:44.480" starttime="20151204 08:10:44.458"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.487" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:10:44.487" starttime="20151204 08:10:44.484"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:44.489" starttime="20151204 08:10:44.482"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.497" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:10:44.505" starttime="20151204 08:10:44.492"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:44.506" starttime="20151204 08:10:44.490"></status>
</kw>
<status status="PASS" endtime="20151204 08:10:44.507" starttime="20151204 08:10:44.449"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151204 08:10:44.512" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151204 08:10:44.513" starttime="20151204 08:10:44.508"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.517" starttime="20151204 08:10:44.515"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.521" starttime="20151204 08:10:44.519"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.525" starttime="20151204 08:10:44.522"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.528" starttime="20151204 08:10:44.526"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.531" starttime="20151204 08:10:44.529"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.536" starttime="20151204 08:10:44.532"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.540" starttime="20151204 08:10:44.537"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.543" starttime="20151204 08:10:44.541"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.547" starttime="20151204 08:10:44.545"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.551" starttime="20151204 08:10:44.548"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.554" starttime="20151204 08:10:44.552"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:10:44.558" starttime="20151204 08:10:44.555"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151204 08:10:44.563" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0']</msg>
<msg timestamp="20151204 08:11:03.264" level="INFO">08:10:45,478 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/ext] for external libraries
08:10:45,487 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
08:10:54,225 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
08:10:54,267 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.125.159]
08:10:54,268 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
08:10:54,268 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
08:10:54,268 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [2]
08:10:54,269 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [232201667725500]
08:10:54,269 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [43667725500]
08:10:54,269 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [POSTPAID]
08:10:54,270 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [1]
08:10:54,270 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101004]
08:10:54,270 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [0]
08:10:54,271 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
08:10:54,271 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
08:10:54,324 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
08:10:54,372 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
08:10:55,846 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
08:10:56,079 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
08:10:58,062 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
08:10:58,062 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
08:10:58,078 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
08:10:58,086 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
08:10:58,449 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
08:10:58,449 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
08:10:58,449 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
08:10:58,449 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
08:10:58,591 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
08:11:01,764 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
08:11:01,829 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
08:11:01,835 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
08:11:01,837 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
08:11:01,837 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
08:11:01,956 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
08:11:01,957 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
08:11:01,965 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
08:11:01,966 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
08:11:01,966 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
08:11:01,966 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
08:11:02,043 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
08:11:02,049 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
08:11:02,104 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
08:11:02,110 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
08:11:02,111 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
08:11:02,112 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
08:11:02,122 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
08:11:02,123 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
08:11:02,129 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
08:11:02,130 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
08:11:02,130 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
08:11:02,130 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
08:11:02,206 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
08:11:02,217 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
08:11:02,257 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
08:11:02,258 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
08:11:02,260 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
08:11:02,260 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
08:11:02,320 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
08:11:02,320 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
08:11:02,323 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
08:11:02,323 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
08:11:02,323 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
08:11:02,324 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
08:11:02,355 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
08:11:02,358 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
08:11:02,403 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
08:11:02,407 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
08:11:02,409 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
08:11:02,409 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
08:11:02,429 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
08:11:02,429 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
08:11:02,443 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
08:11:02,444 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
08:11:02,444 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
08:11:02,444 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
08:11:02,512 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
08:11:02,533 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
08:11:02,583 INFO  [SoapUITestCaseRunner] running step [setBalance]
08:11:02,587 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
08:11:02,588 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
08:11:02,589 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
08:11:02,616 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
08:11:02,616 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
08:11:02,629 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
08:11:02,629 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
08:11:02,629 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
08:11:02,629 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
08:11:02,696 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
08:11:02,707 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
08:11:02,753 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
08:11:02,796 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
08:11:02,798 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
08:11:02,800 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
08:11:02,801 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
08:11:02,801 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
08:11:02,809 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
08:11:02,809 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
08:11:02,816 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
08:11:02,817 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
08:11:02,817 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
08:11:02,817 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
08:11:02,817 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
08:11:02,829 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
08:11:02,829 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
08:11:02,831 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
08:11:02,832 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
08:11:02,832 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
08:11:02,958 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
08:11:02,958 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
08:11:02,965 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
08:11:02,965 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
08:11:02,965 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
08:11:02,966 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
08:11:02,966 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
08:11:02,972 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
08:11:02,973 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
08:11:02,976 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
08:11:02,978 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
08:11:02,978 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
08:11:02,989 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
08:11:02,989 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
08:11:02,995 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
08:11:02,996 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
08:11:02,996 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
08:11:02,996 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
08:11:02,996 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
08:11:03,007 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
08:11:03,008 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
08:11:03,011 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
08:11:03,013 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
08:11:03,013 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
08:11:03,045 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
08:11:03,045 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
08:11:03,051 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
08:11:03,051 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
08:11:03,051 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
08:11:03,052 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
08:11:03,052 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
08:11:03,057 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
08:11:03,058 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
08:11:03,061 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
08:11:03,062 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
08:11:03,062 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
08:11:03,076 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
08:11:03,076 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
08:11:03,089 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
08:11:03,089 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
08:11:03,089 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
08:11:03,089 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
08:11:03,090 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
08:11:03,112 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
08:11:03,113 INFO  [SoapUITestCaseRunner] running step [setBalance]
08:11:03,115 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
08:11:03,117 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
08:11:03,117 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
08:11:03,138 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
08:11:03,138 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
08:11:03,150 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
08:11:03,150 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
08:11:03,151 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
08:11:03,151 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
08:11:03,151 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
08:11:03,161 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
08:11:03,162 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
08:11:03,164 INFO  [SoapUITestCaseRunner] running step [finish_successful]
08:11:03,252 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
08:11:03,253 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 8809ms, status: FINISHED
08:11:03,254 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 8809ms</msg>
<status status="PASS" endtime="20151204 08:11:03.276" starttime="20151204 08:10:44.561"></status>
</kw>
<msg timestamp="20151204 08:11:03.284" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:03.286" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151204 08:11:03.280" starttime="20151204 08:10:44.559"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:03.327" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20151204 08:11:03.326" starttime="20151204 08:11:03.319"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:03.337" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:03.336" starttime="20151204 08:11:03.331"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:03.347" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:03.345" starttime="20151204 08:11:03.341"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:03.364" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:03.376" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:03.377" starttime="20151204 08:11:03.356"></status>
</kw>
<msg timestamp="20151204 08:11:03.379" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:03.379" level="INFO">${return_log_entry} = 2015-12-04 08:11:03,252 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151204 08:11:03.378" starttime="20151204 08:11:03.350"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:03.398" starttime="20151204 08:11:03.393"></status>
</kw>
<msg timestamp="20151204 08:11:03.402" level="INFO">${return_log_entry} = 2015-12-04 08:11:03,252 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151204 08:11:03.400" starttime="20151204 08:11:03.381"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:03.422" starttime="20151204 08:11:03.417"></status>
</kw>
<msg timestamp="20151204 08:11:03.426" level="INFO">${return_log_entry} = 2015-12-04 08:11:03,252 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151204 08:11:03.425" starttime="20151204 08:11:03.405"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:03.448" starttime="20151204 08:11:03.442"></status>
</kw>
<msg timestamp="20151204 08:11:03.452" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:11:03.451" starttime="20151204 08:11:03.430"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:03.476" starttime="20151204 08:11:03.472"></status>
</kw>
<msg timestamp="20151204 08:11:03.479" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:11:03.478" starttime="20151204 08:11:03.455"></status>
</kw>
<msg timestamp="20151204 08:11:03.483" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:11:03.482" starttime="20151204 08:11:03.292"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:03.510" starttime="20151204 08:11:03.506"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:03.516" starttime="20151204 08:11:03.512"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:03.522" starttime="20151204 08:11:03.519"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151204 08:11:03.562" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151204 08:11:03.564" starttime="20151204 08:11:03.539"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:03.566" starttime="20151204 08:11:03.535"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:03.568" starttime="20151204 08:11:03.525"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:03.570" starttime="20151204 08:11:03.486"></status>
</kw>
<msg timestamp="20151204 08:11:03.575" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20151204 08:11:03.573" starttime="20151204 08:10:44.390"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20151204 08:11:03.582" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151204 08:11:03.584" starttime="20151204 08:11:03.578"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151204 08:11:03.590" level="INFO">Test Subscribers Created!</msg>
<status status="PASS" endtime="20151204 08:11:03.591" starttime="20151204 08:11:03.586"></status>
</kw>
<kw type="kw" name="${calling_int} = BuiltIn.Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
</arguments>
<msg timestamp="20151204 08:11:03.599" level="INFO">Argument types are:
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20151204 08:11:03.602" level="INFO">${calling_int} = 43667725500</msg>
<status status="PASS" endtime="20151204 08:11:03.601" starttime="20151204 08:11:03.594"></status>
</kw>
<kw type="kw" name="${called_party} = BuiltIn.Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${calling_int}+1</arg>
</arguments>
<msg timestamp="20151204 08:11:03.638" level="INFO">${called_party} = 43667725501</msg>
<status status="PASS" endtime="20151204 08:11:03.636" starttime="20151204 08:11:03.605"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC 1s *******</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:03.644" starttime="20151204 08:11:03.641"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC 1s">
<doc>Runs a standard MOC 1s session</doc>
<arguments>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>${called_party}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc1s</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20151204 08:11:03.716" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv</msg>
<status status="PASS" endtime="20151204 08:11:03.715" starttime="20151204 08:11:03.710"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20151204 08:11:03.724" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv</msg>
<status status="PASS" endtime="20151204 08:11:03.722" starttime="20151204 08:11:03.718"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20151204 08:11:03.731" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini</msg>
<status status="PASS" endtime="20151204 08:11:03.730" starttime="20151204 08:11:03.726"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20151204 08:11:03.739" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc1s.cgs</msg>
<status status="PASS" endtime="20151204 08:11:03.738" starttime="20151204 08:11:03.734"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:03.744" starttime="20151204 08:11:03.741"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20151204 08:11:03.798" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:11:03.800" starttime="20151204 08:11:03.746"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:03.806" starttime="20151204 08:11:03.803"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20151204 08:11:03.830" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:11:03.832" starttime="20151204 08:11:03.808"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20151204 08:11:03.844" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:11:03.846" starttime="20151204 08:11:03.835"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:03.852" starttime="20151204 08:11:03.848"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20151204 08:11:03.869" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:11:03.871" starttime="20151204 08:11:03.854"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20151204 08:11:03.884" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:11:03.886" starttime="20151204 08:11:03.874"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:03.892" starttime="20151204 08:11:03.889"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20151204 08:11:03.918" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc1s.cgs /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc1s-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20151204 08:11:19.948" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151204 08:11:19.932" starttime="20151204 08:11:03.895"></status>
</kw>
<msg timestamp="20151204 08:11:19.963" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151204 08:11:19.960" starttime="20151204 08:11:03.682"></status>
</kw>
<msg timestamp="20151204 08:11:19.975" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151204 08:11:19.969" starttime="20151204 08:11:03.650"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151204 08:11:19.995" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20151204 08:11:19.998" starttime="20151204 08:11:19.982"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20151204 08:11:20.019" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151204 08:11:20.023" starttime="20151204 08:11:20.005"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:20.044" starttime="20151204 08:11:20.037"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151204 08:11:20.241" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:11:20.243" starttime="20151204 08:11:20.200"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:20.245" starttime="20151204 08:11:20.196"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151204 08:11:20.286" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:11:20.289" starttime="20151204 08:11:20.269"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:20.292" starttime="20151204 08:11:20.254"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151204 08:11:20.348" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:11:20.351" starttime="20151204 08:11:20.310"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:20.356" starttime="20151204 08:11:20.299"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:20.359" starttime="20151204 08:11:20.170"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151204 08:11:20.377" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151204 08:11:20.379" starttime="20151204 08:11:20.365"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:20.394" starttime="20151204 08:11:20.387"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:20.417" starttime="20151204 08:11:20.408"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:20.432" starttime="20151204 08:11:20.422"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:20.438" starttime="20151204 08:11:20.435"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:20.444" starttime="20151204 08:11:20.441"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:20.451" starttime="20151204 08:11:20.447"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151204 08:11:20.461" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725500']</msg>
<msg timestamp="20151204 08:11:20.989" level="INFO">08:11:20,981 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
08:11:20,982 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
08:11:20,983 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=167577
08:11:20,983 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500
08:11:20,984 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
08:11:20,985 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004
08:11:20,986 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID
08:11:20,987 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20151204 08:11:20.991" starttime="20151204 08:11:20.458"></status>
</kw>
<msg timestamp="20151204 08:11:20.994" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:20.996" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151204 08:11:20.993" starttime="20151204 08:11:20.454"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:21.011" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20151204 08:11:21.010" starttime="20151204 08:11:21.008"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.015" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:21.014" starttime="20151204 08:11:21.012"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.018" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:21.018" starttime="20151204 08:11:21.016"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.024" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:21.034" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:21.036" starttime="20151204 08:11:21.021"></status>
</kw>
<msg timestamp="20151204 08:11:21.039" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:21.041" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,981 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151204 08:11:21.038" starttime="20151204 08:11:21.019"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.060" starttime="20151204 08:11:21.056"></status>
</kw>
<msg timestamp="20151204 08:11:21.064" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,981 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151204 08:11:21.062" starttime="20151204 08:11:21.043"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.081" starttime="20151204 08:11:21.077"></status>
</kw>
<msg timestamp="20151204 08:11:21.084" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,981 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151204 08:11:21.083" starttime="20151204 08:11:21.066"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.094" starttime="20151204 08:11:21.092"></status>
</kw>
<msg timestamp="20151204 08:11:21.096" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:11:21.095" starttime="20151204 08:11:21.086"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.107" starttime="20151204 08:11:21.105"></status>
</kw>
<msg timestamp="20151204 08:11:21.109" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:11:21.108" starttime="20151204 08:11:21.097"></status>
</kw>
<msg timestamp="20151204 08:11:21.112" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:11:21.111" starttime="20151204 08:11:21.000"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:21.132" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20151204 08:11:21.131" starttime="20151204 08:11:21.126"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.138" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:21.137" starttime="20151204 08:11:21.134"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.145" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:21.144" starttime="20151204 08:11:21.140"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.155" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:21.163" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:21.164" starttime="20151204 08:11:21.151"></status>
</kw>
<msg timestamp="20151204 08:11:21.167" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:21.168" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,982 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151204 08:11:21.166" starttime="20151204 08:11:21.147"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.183" starttime="20151204 08:11:21.179"></status>
</kw>
<msg timestamp="20151204 08:11:21.186" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,982 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151204 08:11:21.185" starttime="20151204 08:11:21.170"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.202" starttime="20151204 08:11:21.198"></status>
</kw>
<msg timestamp="20151204 08:11:21.204" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,982 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151204 08:11:21.203" starttime="20151204 08:11:21.189"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.221" starttime="20151204 08:11:21.216"></status>
</kw>
<msg timestamp="20151204 08:11:21.223" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151204 08:11:21.222" starttime="20151204 08:11:21.206"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.244" starttime="20151204 08:11:21.241"></status>
</kw>
<msg timestamp="20151204 08:11:21.247" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151204 08:11:21.246" starttime="20151204 08:11:21.225"></status>
</kw>
<msg timestamp="20151204 08:11:21.250" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20151204 08:11:21.250" starttime="20151204 08:11:21.114"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:21.264" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20151204 08:11:21.263" starttime="20151204 08:11:21.261"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.268" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:21.267" starttime="20151204 08:11:21.265"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.271" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:21.271" starttime="20151204 08:11:21.269"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.277" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:21.281" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:21.282" starttime="20151204 08:11:21.275"></status>
</kw>
<msg timestamp="20151204 08:11:21.284" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:21.284" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,983 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151204 08:11:21.283" starttime="20151204 08:11:21.272"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.293" starttime="20151204 08:11:21.291"></status>
</kw>
<msg timestamp="20151204 08:11:21.295" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,983 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151204 08:11:21.294" starttime="20151204 08:11:21.286"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.303" starttime="20151204 08:11:21.301"></status>
</kw>
<msg timestamp="20151204 08:11:21.305" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,983 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725500</msg>
<status status="PASS" endtime="20151204 08:11:21.304" starttime="20151204 08:11:21.296"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.314" starttime="20151204 08:11:21.311"></status>
</kw>
<msg timestamp="20151204 08:11:21.315" level="INFO">${resultCode} = 232201667725500</msg>
<status status="PASS" endtime="20151204 08:11:21.315" starttime="20151204 08:11:21.306"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.326" starttime="20151204 08:11:21.324"></status>
</kw>
<msg timestamp="20151204 08:11:21.328" level="INFO">${resultCode} = 232201667725500</msg>
<status status="PASS" endtime="20151204 08:11:21.327" starttime="20151204 08:11:21.316"></status>
</kw>
<msg timestamp="20151204 08:11:21.330" level="INFO">${imsi} = 232201667725500</msg>
<status status="PASS" endtime="20151204 08:11:21.329" starttime="20151204 08:11:21.252"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:21.343" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20151204 08:11:21.343" starttime="20151204 08:11:21.340"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.347" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:21.346" starttime="20151204 08:11:21.344"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.350" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:21.350" starttime="20151204 08:11:21.348"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.356" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:21.360" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:21.361" starttime="20151204 08:11:21.353"></status>
</kw>
<msg timestamp="20151204 08:11:21.362" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:21.363" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,983 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=167577</msg>
<status status="PASS" endtime="20151204 08:11:21.362" starttime="20151204 08:11:21.351"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.371" starttime="20151204 08:11:21.369"></status>
</kw>
<msg timestamp="20151204 08:11:21.373" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,983 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=167577</msg>
<status status="PASS" endtime="20151204 08:11:21.372" starttime="20151204 08:11:21.364"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.381" starttime="20151204 08:11:21.379"></status>
</kw>
<msg timestamp="20151204 08:11:21.382" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,983 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=167577</msg>
<status status="PASS" endtime="20151204 08:11:21.382" starttime="20151204 08:11:21.374"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.391" starttime="20151204 08:11:21.388"></status>
</kw>
<msg timestamp="20151204 08:11:21.392" level="INFO">${resultCode} = 167577</msg>
<status status="PASS" endtime="20151204 08:11:21.392" starttime="20151204 08:11:21.383"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.403" starttime="20151204 08:11:21.401"></status>
</kw>
<msg timestamp="20151204 08:11:21.404" level="INFO">${resultCode} = 167577</msg>
<status status="PASS" endtime="20151204 08:11:21.404" starttime="20151204 08:11:21.393"></status>
</kw>
<msg timestamp="20151204 08:11:21.406" level="INFO">${id} = 167577</msg>
<status status="PASS" endtime="20151204 08:11:21.406" starttime="20151204 08:11:21.332"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:21.419" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20151204 08:11:21.418" starttime="20151204 08:11:21.416"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.422" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:21.422" starttime="20151204 08:11:21.420"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.426" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:21.425" starttime="20151204 08:11:21.423"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.432" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:21.436" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:21.437" starttime="20151204 08:11:21.429"></status>
</kw>
<msg timestamp="20151204 08:11:21.439" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:21.439" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,984 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151204 08:11:21.438" starttime="20151204 08:11:21.427"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.448" starttime="20151204 08:11:21.446"></status>
</kw>
<msg timestamp="20151204 08:11:21.449" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,984 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151204 08:11:21.449" starttime="20151204 08:11:21.440"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.457" starttime="20151204 08:11:21.455"></status>
</kw>
<msg timestamp="20151204 08:11:21.459" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,984 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151204 08:11:21.458" starttime="20151204 08:11:21.450"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.467" starttime="20151204 08:11:21.465"></status>
</kw>
<msg timestamp="20151204 08:11:21.469" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151204 08:11:21.468" starttime="20151204 08:11:21.460"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.479" starttime="20151204 08:11:21.478"></status>
</kw>
<msg timestamp="20151204 08:11:21.481" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151204 08:11:21.480" starttime="20151204 08:11:21.470"></status>
</kw>
<msg timestamp="20151204 08:11:21.483" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20151204 08:11:21.482" starttime="20151204 08:11:21.408"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:21.495" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20151204 08:11:21.495" starttime="20151204 08:11:21.493"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.499" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:21.498" starttime="20151204 08:11:21.497"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.503" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:21.502" starttime="20151204 08:11:21.500"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.508" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:21.512" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:21.513" starttime="20151204 08:11:21.506"></status>
</kw>
<msg timestamp="20151204 08:11:21.515" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:21.516" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,985 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151204 08:11:21.514" starttime="20151204 08:11:21.504"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.524" starttime="20151204 08:11:21.522"></status>
</kw>
<msg timestamp="20151204 08:11:21.525" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,985 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151204 08:11:21.525" starttime="20151204 08:11:21.517"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.638" starttime="20151204 08:11:21.531"></status>
</kw>
<msg timestamp="20151204 08:11:21.644" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,985 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101004</msg>
<status status="PASS" endtime="20151204 08:11:21.641" starttime="20151204 08:11:21.527"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.673" starttime="20151204 08:11:21.667"></status>
</kw>
<msg timestamp="20151204 08:11:21.677" level="INFO">${resultCode} = 101004</msg>
<status status="PASS" endtime="20151204 08:11:21.675" starttime="20151204 08:11:21.647"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.702" starttime="20151204 08:11:21.698"></status>
</kw>
<msg timestamp="20151204 08:11:21.705" level="INFO">${resultCode} = 101004</msg>
<status status="PASS" endtime="20151204 08:11:21.704" starttime="20151204 08:11:21.680"></status>
</kw>
<msg timestamp="20151204 08:11:21.710" level="INFO">${tariffId} = 101004</msg>
<status status="PASS" endtime="20151204 08:11:21.708" starttime="20151204 08:11:21.485"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:21.739" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20151204 08:11:21.738" starttime="20151204 08:11:21.733"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.747" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:21.746" starttime="20151204 08:11:21.742"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.754" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:21.753" starttime="20151204 08:11:21.750"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.765" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:21.773" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:21.775" starttime="20151204 08:11:21.760"></status>
</kw>
<msg timestamp="20151204 08:11:21.778" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:21.779" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,986 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151204 08:11:21.777" starttime="20151204 08:11:21.756"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.795" starttime="20151204 08:11:21.791"></status>
</kw>
<msg timestamp="20151204 08:11:21.798" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,986 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151204 08:11:21.797" starttime="20151204 08:11:21.781"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.814" starttime="20151204 08:11:21.810"></status>
</kw>
<msg timestamp="20151204 08:11:21.817" level="INFO">${return_log_entry} = 2015-12-04 08:11:20,986 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=POSTPAID</msg>
<status status="PASS" endtime="20151204 08:11:21.816" starttime="20151204 08:11:21.800"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.835" starttime="20151204 08:11:21.830"></status>
</kw>
<msg timestamp="20151204 08:11:21.838" level="INFO">${resultCode} = POSTPAID</msg>
<status status="PASS" endtime="20151204 08:11:21.837" starttime="20151204 08:11:21.819"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.859" starttime="20151204 08:11:21.855"></status>
</kw>
<msg timestamp="20151204 08:11:21.862" level="INFO">${resultCode} = POSTPAID</msg>
<status status="PASS" endtime="20151204 08:11:21.861" starttime="20151204 08:11:21.840"></status>
</kw>
<msg timestamp="20151204 08:11:21.866" level="INFO">${type} = POSTPAID</msg>
<status status="PASS" endtime="20151204 08:11:21.865" starttime="20151204 08:11:21.715"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.882" starttime="20151204 08:11:21.879"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.884" starttime="20151204 08:11:21.882"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.887" starttime="20151204 08:11:21.885"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151204 08:11:21.900" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151204 08:11:21.902" starttime="20151204 08:11:21.895"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:21.902" starttime="20151204 08:11:21.893"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:21.903" starttime="20151204 08:11:21.888"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:21.904" starttime="20151204 08:11:21.869"></status>
</kw>
<msg timestamp="20151204 08:11:21.908" level="INFO">${rc} = OK</msg>
<msg timestamp="20151204 08:11:21.909" level="INFO">${provId} = 1</msg>
<msg timestamp="20151204 08:11:21.909" level="INFO">${imsi} = 232201667725500</msg>
<msg timestamp="20151204 08:11:21.910" level="INFO">${id} = 167577</msg>
<msg timestamp="20151204 08:11:21.910" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20151204 08:11:21.911" level="INFO">${tariffId} = 101004</msg>
<msg timestamp="20151204 08:11:21.912" level="INFO">${type} = POSTPAID</msg>
<status status="PASS" endtime="20151204 08:11:21.907" starttime="20151204 08:11:20.074"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.941" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:11:21.942" starttime="20151204 08:11:21.938"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:21.943" starttime="20151204 08:11:21.934"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.949" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:11:21.950" starttime="20151204 08:11:21.946"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:21.951" starttime="20151204 08:11:21.944"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.956" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151204 08:11:21.957" starttime="20151204 08:11:21.954"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:21.958" starttime="20151204 08:11:21.952"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:21.959" starttime="20151204 08:11:21.926"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151204 08:11:21.963" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151204 08:11:21.963" starttime="20151204 08:11:21.960"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.967" starttime="20151204 08:11:21.964"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.970" starttime="20151204 08:11:21.968"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.973" starttime="20151204 08:11:21.971"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.976" starttime="20151204 08:11:21.974"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.979" starttime="20151204 08:11:21.977"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:21.982" starttime="20151204 08:11:21.980"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151204 08:11:21.986" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=2', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=POSTPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101004', u'HighLevelOps.createTestSubscribers.input.balance=0', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725500', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=167577']</msg>
<msg timestamp="20151204 08:11:22.203" level="INFO">08:11:22,197 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
08:11:22,198 INFO  [log] LowLevelOps.getMainAccount.output.accountId=167578
08:11:22,199 INFO  [log] LowLevelOps.getMainAccount.output.balance=75000
08:11:22,200 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
08:11:22,201 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151204 08:11:22.205" starttime="20151204 08:11:21.984"></status>
</kw>
<msg timestamp="20151204 08:11:22.211" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:22.212" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151204 08:11:22.208" starttime="20151204 08:11:21.983"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:22.240" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20151204 08:11:22.239" starttime="20151204 08:11:22.231"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.247" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:22.246" starttime="20151204 08:11:22.242"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.255" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:22.254" starttime="20151204 08:11:22.250"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.267" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:22.276" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:22.277" starttime="20151204 08:11:22.262"></status>
</kw>
<msg timestamp="20151204 08:11:22.280" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:22.282" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,197 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151204 08:11:22.279" starttime="20151204 08:11:22.257"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.299" starttime="20151204 08:11:22.295"></status>
</kw>
<msg timestamp="20151204 08:11:22.302" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,197 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151204 08:11:22.301" starttime="20151204 08:11:22.284"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.319" starttime="20151204 08:11:22.315"></status>
</kw>
<msg timestamp="20151204 08:11:22.322" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,197 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151204 08:11:22.321" starttime="20151204 08:11:22.305"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.342" starttime="20151204 08:11:22.336"></status>
</kw>
<msg timestamp="20151204 08:11:22.345" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:11:22.344" starttime="20151204 08:11:22.325"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.369" starttime="20151204 08:11:22.365"></status>
</kw>
<msg timestamp="20151204 08:11:22.372" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:11:22.371" starttime="20151204 08:11:22.348"></status>
</kw>
<msg timestamp="20151204 08:11:22.375" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151204 08:11:22.375" starttime="20151204 08:11:22.216"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:22.387" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20151204 08:11:22.387" starttime="20151204 08:11:22.385"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.391" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:22.390" starttime="20151204 08:11:22.389"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.394" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:22.394" starttime="20151204 08:11:22.392"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.400" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:22.403" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:22.404" starttime="20151204 08:11:22.397"></status>
</kw>
<msg timestamp="20151204 08:11:22.406" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:22.406" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,198 INFO  [log] LowLevelOps.getMainAccount.output.accountId=167578</msg>
<status status="PASS" endtime="20151204 08:11:22.405" starttime="20151204 08:11:22.395"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.414" starttime="20151204 08:11:22.412"></status>
</kw>
<msg timestamp="20151204 08:11:22.415" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,198 INFO  [log] LowLevelOps.getMainAccount.output.accountId=167578</msg>
<status status="PASS" endtime="20151204 08:11:22.415" starttime="20151204 08:11:22.407"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.423" starttime="20151204 08:11:22.421"></status>
</kw>
<msg timestamp="20151204 08:11:22.424" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,198 INFO  [log] LowLevelOps.getMainAccount.output.accountId=167578</msg>
<status status="PASS" endtime="20151204 08:11:22.424" starttime="20151204 08:11:22.416"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.433" starttime="20151204 08:11:22.431"></status>
</kw>
<msg timestamp="20151204 08:11:22.434" level="INFO">${resultCode} = 167578</msg>
<status status="PASS" endtime="20151204 08:11:22.434" starttime="20151204 08:11:22.426"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.445" starttime="20151204 08:11:22.443"></status>
</kw>
<msg timestamp="20151204 08:11:22.446" level="INFO">${resultCode} = 167578</msg>
<status status="PASS" endtime="20151204 08:11:22.446" starttime="20151204 08:11:22.435"></status>
</kw>
<msg timestamp="20151204 08:11:22.448" level="INFO">${accountId} = 167578</msg>
<status status="PASS" endtime="20151204 08:11:22.447" starttime="20151204 08:11:22.377"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:22.460" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20151204 08:11:22.459" starttime="20151204 08:11:22.457"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.463" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:22.463" starttime="20151204 08:11:22.461"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.467" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:22.466" starttime="20151204 08:11:22.464"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.472" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:22.476" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:22.477" starttime="20151204 08:11:22.470"></status>
</kw>
<msg timestamp="20151204 08:11:22.479" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:22.479" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,199 INFO  [log] LowLevelOps.getMainAccount.output.balance=75000</msg>
<status status="PASS" endtime="20151204 08:11:22.478" starttime="20151204 08:11:22.468"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.490" starttime="20151204 08:11:22.487"></status>
</kw>
<msg timestamp="20151204 08:11:22.492" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,199 INFO  [log] LowLevelOps.getMainAccount.output.balance=75000</msg>
<status status="PASS" endtime="20151204 08:11:22.491" starttime="20151204 08:11:22.480"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.572" starttime="20151204 08:11:22.523"></status>
</kw>
<msg timestamp="20151204 08:11:22.585" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,199 INFO  [log] LowLevelOps.getMainAccount.output.balance=75000</msg>
<status status="PASS" endtime="20151204 08:11:22.583" starttime="20151204 08:11:22.493"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.632" starttime="20151204 08:11:22.628"></status>
</kw>
<msg timestamp="20151204 08:11:22.634" level="INFO">${resultCode} = 75000</msg>
<status status="PASS" endtime="20151204 08:11:22.634" starttime="20151204 08:11:22.599"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.650" starttime="20151204 08:11:22.647"></status>
</kw>
<msg timestamp="20151204 08:11:22.652" level="INFO">${resultCode} = 75000</msg>
<status status="PASS" endtime="20151204 08:11:22.651" starttime="20151204 08:11:22.636"></status>
</kw>
<msg timestamp="20151204 08:11:22.655" level="INFO">${balance} = 75000</msg>
<status status="PASS" endtime="20151204 08:11:22.654" starttime="20151204 08:11:22.450"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:22.673" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20151204 08:11:22.672" starttime="20151204 08:11:22.669"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.678" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:22.677" starttime="20151204 08:11:22.675"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.683" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:22.682" starttime="20151204 08:11:22.680"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.691" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:22.696" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:22.697" starttime="20151204 08:11:22.688"></status>
</kw>
<msg timestamp="20151204 08:11:22.699" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:22.700" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,200 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151204 08:11:22.698" starttime="20151204 08:11:22.685"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.709" starttime="20151204 08:11:22.707"></status>
</kw>
<msg timestamp="20151204 08:11:22.711" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,200 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151204 08:11:22.710" starttime="20151204 08:11:22.701"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.720" starttime="20151204 08:11:22.717"></status>
</kw>
<msg timestamp="20151204 08:11:22.721" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,200 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151204 08:11:22.721" starttime="20151204 08:11:22.712"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.732" starttime="20151204 08:11:22.729"></status>
</kw>
<msg timestamp="20151204 08:11:22.733" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151204 08:11:22.733" starttime="20151204 08:11:22.723"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.746" starttime="20151204 08:11:22.744"></status>
</kw>
<msg timestamp="20151204 08:11:22.748" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151204 08:11:22.747" starttime="20151204 08:11:22.735"></status>
</kw>
<msg timestamp="20151204 08:11:22.750" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20151204 08:11:22.750" starttime="20151204 08:11:22.658"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151204 08:11:22.767" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20151204 08:11:22.764" starttime="20151204 08:11:22.762"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.771" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151204 08:11:22.770" starttime="20151204 08:11:22.768"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.775" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151204 08:11:22.774" starttime="20151204 08:11:22.772"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151204 08:11:22.782" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151204 08:11:22.787" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151204 08:11:22.787" starttime="20151204 08:11:22.779"></status>
</kw>
<msg timestamp="20151204 08:11:22.789" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151204 08:11:22.790" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,201 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151204 08:11:22.789" starttime="20151204 08:11:22.777"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.799" starttime="20151204 08:11:22.797"></status>
</kw>
<msg timestamp="20151204 08:11:22.801" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,201 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151204 08:11:22.800" starttime="20151204 08:11:22.791"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.811" starttime="20151204 08:11:22.808"></status>
</kw>
<msg timestamp="20151204 08:11:22.813" level="INFO">${return_log_entry} = 2015-12-04 08:11:22,201 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151204 08:11:22.812" starttime="20151204 08:11:22.803"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.823" starttime="20151204 08:11:22.820"></status>
</kw>
<msg timestamp="20151204 08:11:22.824" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151204 08:11:22.824" starttime="20151204 08:11:22.814"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.837" starttime="20151204 08:11:22.835"></status>
</kw>
<msg timestamp="20151204 08:11:22.839" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151204 08:11:22.838" starttime="20151204 08:11:22.826"></status>
</kw>
<msg timestamp="20151204 08:11:22.841" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20151204 08:11:22.840" starttime="20151204 08:11:22.752"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.854" starttime="20151204 08:11:22.851"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.857" starttime="20151204 08:11:22.855"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.860" starttime="20151204 08:11:22.858"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151204 08:11:22.875" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_ShortDuration/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151204 08:11:22.876" starttime="20151204 08:11:22.869"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:22.877" starttime="20151204 08:11:22.867"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:22.878" starttime="20151204 08:11:22.861"></status>
</kw>
<status status="PASS" endtime="20151204 08:11:22.879" starttime="20151204 08:11:22.843"></status>
</kw>
<msg timestamp="20151204 08:11:22.882" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20151204 08:11:22.883" level="INFO">${accId} = 167578</msg>
<msg timestamp="20151204 08:11:22.884" level="INFO">${bal} = 75000</msg>
<msg timestamp="20151204 08:11:22.884" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20151204 08:11:22.885" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20151204 08:11:22.881" starttime="20151204 08:11:21.914"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Be Equal As Numbers</arg>
<arg>${TESTSUBCRIBERS PP DEFAULT SLICE COSTS}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and actual balance mismatch!</arg>
</arguments>
<status status="PASS" endtime="20151204 08:11:22.888" starttime="20151204 08:11:22.886"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check OK!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151204 08:11:22.890" level="INFO">Account balance check OK!</msg>
<status status="PASS" endtime="20151204 08:11:22.891" starttime="20151204 08:11:22.889"></status>
</kw>
<doc>Test will make a POSTPAID MOC call, duration 1s.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>POSTPAID_supported</tag>
</tags>
<status status="PASS" critical="yes" endtime="20151204 08:11:22.892" starttime="20151204 08:10:44.361"></status>
</test>
<doc>Testing the postpaid MOC call, duration is 1s - shorter than one slice (less than 60s)

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20151204 08:11:22.902" starttime="20151204 08:10:34.554"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">matko.sanseovic</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">MOC_only</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">POSTPAID_supported</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="MOC POSTPAID ONNET-ShortDuration-robot-suite">MOC POSTPAID ONNET-ShortDuration-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
