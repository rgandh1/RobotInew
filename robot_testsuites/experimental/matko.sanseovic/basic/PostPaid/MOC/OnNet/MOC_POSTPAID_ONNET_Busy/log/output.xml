<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20151201 15:56:03.846">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/MOC_POSTPAID_ONNET-Busy-robot-suite.txt" id="s1" name="MOC POSTPAID ONNET-Busy-robot-suite">
<kw type="setup" name="suite-global-keyword-resource.Setup Suite">
<doc></doc>
<arguments>
</arguments>
<kw type="kw" name="${date} = OperatingSystem.Run">
<doc>Runs the given command in the system and returns the output.</doc>
<arguments>
<arg>date</arg>
</arguments>
<msg timestamp="20151201 15:56:06.732" level="INFO">Running command 'date 2&gt;&amp;1'</msg>
<msg timestamp="20151201 15:56:06.735" level="INFO">${date} = Tue Dec  1 15:56:06 CET 2015</msg>
<status status="PASS" endtime="20151201 15:56:06.734" starttime="20151201 15:56:06.718"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Date and time: ${date}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151201 15:56:06.740" level="INFO">Date and time: Tue Dec  1 15:56:06 CET 2015</msg>
<status status="PASS" endtime="20151201 15:56:06.741" starttime="20151201 15:56:06.737"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Target IN machine: ${IN-APP HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151201 15:56:06.746" level="INFO">Target IN machine: 10.105.125.135</msg>
<status status="PASS" endtime="20151201 15:56:06.747" starttime="20151201 15:56:06.743"></status>
</kw>
<kw type="kw" name="${in_rc}, ${in_version} = suite-global-keyword-resource.Get IN Vitality State">
<doc>Checks the state of the IN service</doc>
<arguments>
<arg>${IN-APP HOST}</arg>
<arg>1111</arg>
<arg>${IN-APP USER}</arg>
<arg>${IN-APP PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${IN-APP MOC SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:06.837" starttime="20151201 15:56:06.834"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:07.061" starttime="20151201 15:56:06.851"></status>
</kw>
<msg timestamp="20151201 15:56:07.066" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151201 15:56:07.064" starttime="20151201 15:56:06.839"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151201 15:56:07.078" level="INFO">Logging into '10.105.125.135:22' as 'qa_automation'.</msg>
<msg timestamp="20151201 15:56:07.283" level="INFO">Read output: Last login: Tue Dec  1 14:23:38 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@in-app01.tb25 ~]$</msg>
<status status="PASS" endtime="20151201 15:56:07.285" starttime="20151201 15:56:07.075"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:07.288" starttime="20151201 15:56:07.068"></status>
</kw>
<msg timestamp="20151201 15:56:07.295" level="INFO">${ssh_connection} = 1</msg>
<status status="PASS" endtime="20151201 15:56:07.292" starttime="20151201 15:56:06.816"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151201 15:56:07.310" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151201 15:56:07.309" starttime="20151201 15:56:07.299"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151201 15:56:07.319" level="INFO">Executing command 'sudo service inew-mvna-corein-service-moc-partition-00-1.0.0 status'.</msg>
<msg timestamp="20151201 15:56:07.537" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151201 15:56:07.541" level="INFO">${output} = I-New MVNA MTel - Core - Service 1.0.0 2015.11.12-14:31:57 is running PID: 12768 </msg>
<status status="PASS" endtime="20151201 15:56:07.540" starttime="20151201 15:56:07.314"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:07.559" starttime="20151201 15:56:07.551"></status>
</kw>
<msg timestamp="20151201 15:56:07.563" level="INFO">${status} = PASS</msg>
<msg timestamp="20151201 15:56:07.564" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151201 15:56:07.561" starttime="20151201 15:56:07.545"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:07.583" starttime="20151201 15:56:07.579"></status>
</kw>
<msg timestamp="20151201 15:56:07.587" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:07.586" starttime="20151201 15:56:07.567"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Service</arg>
</arguments>
<msg timestamp="20151201 15:56:07.597" level="INFO">${version_r} =  1.0.0 2015.11.12-14:31:57 is running PID: 12768 </msg>
<status status="PASS" endtime="20151201 15:56:07.595" starttime="20151201 15:56:07.590"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151201 15:56:07.606" level="INFO">${version} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151201 15:56:07.605" starttime="20151201 15:56:07.600"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:07.614" starttime="20151201 15:56:07.610"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:07.645" starttime="20151201 15:56:07.640"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151201 15:56:07.656" starttime="20151201 15:56:07.649"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:07.660" starttime="20151201 15:56:07.618"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:07.678" starttime="20151201 15:56:07.673"></status>
</kw>
<msg timestamp="20151201 15:56:07.681" level="INFO">${ver} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151201 15:56:07.680" starttime="20151201 15:56:07.663"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:07.689" starttime="20151201 15:56:07.684"></status>
</kw>
<msg timestamp="20151201 15:56:07.695" level="INFO">${in_rc} = OK</msg>
<msg timestamp="20151201 15:56:07.697" level="INFO">${in_version} =  1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151201 15:56:07.693" starttime="20151201 15:56:06.773"></status>
</kw>
<kw type="kw" name="${xdr_rc}, ${xdr_version} = suite-global-keyword-resource.Get XDR Vitality State">
<doc>Checks multiple vitality aspects of an XDR instance</doc>
<arguments>
<arg>${XDR HOST}</arg>
<arg>1111</arg>
<arg>${XDR USER}</arg>
<arg>${XDR PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${XDR SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:07.840" starttime="20151201 15:56:07.836"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:07.901" starttime="20151201 15:56:07.858"></status>
</kw>
<msg timestamp="20151201 15:56:07.903" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151201 15:56:07.903" starttime="20151201 15:56:07.843"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151201 15:56:07.915" level="INFO">Logging into '10.105.125.171:22' as 'qa_automation'.</msg>
<msg timestamp="20151201 15:56:08.173" level="INFO">Read output: Last login: Tue Dec  1 14:23:41 2015 from 10.105.80.196
id: cannot find name for group ID 20007
[1m[qa_automation@xdr01.tb25 ~]$</msg>
<status status="PASS" endtime="20151201 15:56:08.176" starttime="20151201 15:56:07.913"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:08.179" starttime="20151201 15:56:07.905"></status>
</kw>
<msg timestamp="20151201 15:56:08.186" level="INFO">${ssh_connection} = 2</msg>
<status status="PASS" endtime="20151201 15:56:08.184" starttime="20151201 15:56:07.808"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151201 15:56:08.200" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151201 15:56:08.199" starttime="20151201 15:56:08.189"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151201 15:56:08.208" level="INFO">Executing command 'sudo service inew-mvno-xdr status'.</msg>
<msg timestamp="20151201 15:56:08.404" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151201 15:56:08.408" level="INFO">${output} = I-New UMS MVNO - XDR 6.2.0 is running PID: 5581 </msg>
<status status="PASS" endtime="20151201 15:56:08.406" starttime="20151201 15:56:08.203"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:08.424" starttime="20151201 15:56:08.417"></status>
</kw>
<msg timestamp="20151201 15:56:08.429" level="INFO">${status} = PASS</msg>
<msg timestamp="20151201 15:56:08.430" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151201 15:56:08.427" starttime="20151201 15:56:08.411"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:08.448" starttime="20151201 15:56:08.445"></status>
</kw>
<msg timestamp="20151201 15:56:08.452" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:08.450" starttime="20151201 15:56:08.433"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Server</arg>
</arguments>
<msg timestamp="20151201 15:56:08.461" level="INFO">${version_r} = I-New UMS MVNO - XDR 6.2.0 is running PID: 5581 </msg>
<status status="PASS" endtime="20151201 15:56:08.460" starttime="20151201 15:56:08.455"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151201 15:56:08.471" level="INFO">${version} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151201 15:56:08.469" starttime="20151201 15:56:08.464"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:08.477" starttime="20151201 15:56:08.474"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:08.541" starttime="20151201 15:56:08.534"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151201 15:56:08.551" starttime="20151201 15:56:08.544"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:08.553" starttime="20151201 15:56:08.481"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:08.572" starttime="20151201 15:56:08.568"></status>
</kw>
<msg timestamp="20151201 15:56:08.576" level="INFO">${ver} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151201 15:56:08.574" starttime="20151201 15:56:08.556"></status>
</kw>
<msg timestamp="20151201 15:56:08.583" level="INFO">${xdr_rc} = OK</msg>
<msg timestamp="20151201 15:56:08.584" level="INFO">${xdr_version} = I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151201 15:56:08.580" starttime="20151201 15:56:07.739"></status>
</kw>
<kw type="kw" name="${crce_rc}, ${crce_version} = suite-global-keyword-resource.Get CRCE Vitality State">
<doc>Checks the state of the CRCE service</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>1111</arg>
<arg>${CRCE USER}</arg>
<arg>${CRCE PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${CRCE SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:08.674" starttime="20151201 15:56:08.672"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:08.738" starttime="20151201 15:56:08.680"></status>
</kw>
<msg timestamp="20151201 15:56:08.742" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151201 15:56:08.741" starttime="20151201 15:56:08.675"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151201 15:56:08.762" level="INFO">Logging into '10.105.125.159:22' as 'qa_automation'.</msg>
<msg timestamp="20151201 15:56:08.980" level="INFO">Read output: Last login: Tue Dec  1 14:23:42 2015 from 10.105.80.196
[1m[qa_automation@ocs01.tb25 ~]$</msg>
<status status="PASS" endtime="20151201 15:56:08.982" starttime="20151201 15:56:08.757"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:08.984" starttime="20151201 15:56:08.745"></status>
</kw>
<msg timestamp="20151201 15:56:08.989" level="INFO">${ssh_connection} = 3</msg>
<status status="PASS" endtime="20151201 15:56:08.987" starttime="20151201 15:56:08.660"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151201 15:56:09.004" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151201 15:56:09.001" starttime="20151201 15:56:08.992"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151201 15:56:09.012" level="INFO">Executing command 'sudo service inew-mvno-crce status'.</msg>
<msg timestamp="20151201 15:56:09.185" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151201 15:56:09.188" level="INFO">${output} = I-New MVNO CRCE - Negret Rating &amp; Charging Engine 6.2.0.30830
Negret Rating &amp; Charging Engine 6.2.0.30830 is running (PID:28716, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151201 15:56:09.187" starttime="20151201 15:56:09.007"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.204" starttime="20151201 15:56:09.197"></status>
</kw>
<msg timestamp="20151201 15:56:09.207" level="INFO">${status} = PASS</msg>
<msg timestamp="20151201 15:56:09.209" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151201 15:56:09.206" starttime="20151201 15:56:09.192"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.227" starttime="20151201 15:56:09.223"></status>
</kw>
<msg timestamp="20151201 15:56:09.230" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:09.229" starttime="20151201 15:56:09.212"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20151201 15:56:09.239" level="INFO">${version_r} =  6.2.0.30830 is running (PID:28716, Wrapper:STARTED, Java:STARTED)
CRCE is running.</msg>
<status status="PASS" endtime="20151201 15:56:09.238" starttime="20151201 15:56:09.233"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151201 15:56:09.249" level="INFO">${version} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151201 15:56:09.247" starttime="20151201 15:56:09.242"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.255" starttime="20151201 15:56:09.251"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.284" starttime="20151201 15:56:09.279"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.293" starttime="20151201 15:56:09.286"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:09.296" starttime="20151201 15:56:09.258"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.312" starttime="20151201 15:56:09.308"></status>
</kw>
<msg timestamp="20151201 15:56:09.316" level="INFO">${ver} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151201 15:56:09.315" starttime="20151201 15:56:09.298"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.324" starttime="20151201 15:56:09.319"></status>
</kw>
<msg timestamp="20151201 15:56:09.330" level="INFO">${crce_rc} = OK</msg>
<msg timestamp="20151201 15:56:09.332" level="INFO">${crce_version} =  6.2.0.30830 </msg>
<status status="PASS" endtime="20151201 15:56:09.328" starttime="20151201 15:56:08.622"></status>
</kw>
<kw type="kw" name="${ocs_rc}, ${ocs_version} = suite-global-keyword-resource.Get OCS Vitality State">
<doc>Checks the state of the OCS service</doc>
<arguments>
<arg>${OCS HOST}</arg>
<arg>1111</arg>
<arg>${OCS USER}</arg>
<arg>${OCS PWD}</arg>
<arg>${EMPTY}</arg>
<arg>${OCS SERVICE NAME}</arg>
</arguments>
<kw type="kw" name="${ssh_connection} = ssh-support-resource.SSH Login">
<doc>Does a password or RSA key file based login at the passed SSH connection depending whether or not the passed password is .</doc>
<arguments>
<arg>${ssh_user}</arg>
<arg>${ssh_pswd}</arg>
<arg>${ssh_rsa_key_file}</arg>
<arg>host=${host}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Set Default Configuration">
<doc>Update the default `configuration`.</doc>
<arguments>
<arg>loglevel=INFO</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.418" starttime="20151201 15:56:09.416"></status>
</kw>
<kw type="kw" name="${ssh_connection} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'=='${EMPTY}'</arg>
<arg>Open Connection</arg>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Open Connection">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${host}</arg>
<arg>port=22</arg>
<arg>timeout=3</arg>
<arg>prompt=$</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.489" starttime="20151201 15:56:09.424"></status>
</kw>
<msg timestamp="20151201 15:56:09.493" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20151201 15:56:09.492" starttime="20151201 15:56:09.419"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${pswd}'=='${EMPTY}'</arg>
<arg>Login With Public Key</arg>
<arg>${user}</arg>
<arg>${rsa_key_file}</arg>
<arg>ELSE</arg>
<arg>Login</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Login">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<msg timestamp="20151201 15:56:09.513" level="INFO">Logging into '10.105.125.159:22' as 'qa_automation'.</msg>
<msg timestamp="20151201 15:56:09.662" level="INFO">Read output: Last login: Tue Dec  1 14:56:08 2015 from 10.105.80.196
[1m[qa_automation@ocs01.tb25 ~]$</msg>
<status status="PASS" endtime="20151201 15:56:09.664" starttime="20151201 15:56:09.508"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:09.666" starttime="20151201 15:56:09.496"></status>
</kw>
<msg timestamp="20151201 15:56:09.671" level="INFO">${ssh_connection} = 4</msg>
<status status="PASS" endtime="20151201 15:56:09.669" starttime="20151201 15:56:09.405"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${ssh_connection}'==''</arg>
<arg>Set Variable</arg>
<arg>LOGIN_FAILED</arg>
</arguments>
<msg timestamp="20151201 15:56:09.685" level="INFO">${resultCode} = None</msg>
<status status="PASS" endtime="20151201 15:56:09.684" starttime="20151201 15:56:09.674"></status>
</kw>
<kw type="kw" name="${output} = SSHLibrary.Execute Command">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>sudo service ${service_name} status</arg>
</arguments>
<msg timestamp="20151201 15:56:09.692" level="INFO">Executing command 'sudo service inew-mvno-ocs status'.</msg>
<msg timestamp="20151201 15:56:09.772" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20151201 15:56:09.775" level="INFO">${output} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp is running (PID: 6110)</msg>
<status status="PASS" endtime="20151201 15:56:09.774" starttime="20151201 15:56:09.688"></status>
</kw>
<kw type="kw" name="${status}, ${rc} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<kw type="kw" name="BuiltIn.Should Contain">
<doc>Fails if `item1` does not contain `item2` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is running</arg>
<arg>msg=Service ${service_name} is not running!</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.791" starttime="20151201 15:56:09.784"></status>
</kw>
<msg timestamp="20151201 15:56:09.794" level="INFO">${status} = PASS</msg>
<msg timestamp="20151201 15:56:09.796" level="INFO">${rc} = None</msg>
<status status="PASS" endtime="20151201 15:56:09.793" starttime="20151201 15:56:09.778"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${status}'=='PASS'</arg>
<arg>Set Variable</arg>
<arg>OK</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>SERVICE_NOT_RUNNING</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>OK</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.814" starttime="20151201 15:56:09.810"></status>
</kw>
<msg timestamp="20151201 15:56:09.817" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:09.816" starttime="20151201 15:56:09.799"></status>
</kw>
<kw type="kw" name="${version_r} = String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${output}</arg>
<arg>Engine</arg>
</arguments>
<msg timestamp="20151201 15:56:09.827" level="INFO">${version_r} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp is running (PID: 6110)</msg>
<status status="PASS" endtime="20151201 15:56:09.826" starttime="20151201 15:56:09.821"></status>
</kw>
<kw type="kw" name="${version} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${version_r}</arg>
<arg>is running</arg>
</arguments>
<msg timestamp="20151201 15:56:09.836" level="INFO">${version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151201 15:56:09.835" starttime="20151201 15:56:09.830"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Log out ******</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.842" starttime="20151201 15:56:09.839"></status>
</kw>
<kw type="kw" name="ssh-support-resource.SSH Logout">
<doc>Closes the passed SSH connection</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<kw type="kw" name="SSHLibrary.Switch Connection">
<doc>Switches the active connection by index or alias.</doc>
<arguments>
<arg>${ssh_connection}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.869" starttime="20151201 15:56:09.865"></status>
</kw>
<kw type="kw" name="SSHLibrary.Close Connection">
<doc>Closes the current connection.</doc>
<arguments>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.878" starttime="20151201 15:56:09.872"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:09.881" starttime="20151201 15:56:09.845"></status>
</kw>
<kw type="kw" name="${ver} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='OK'</arg>
<arg>Set Variable</arg>
<arg>${version}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${version}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.894" starttime="20151201 15:56:09.892"></status>
</kw>
<msg timestamp="20151201 15:56:09.896" level="INFO">${ver} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151201 15:56:09.895" starttime="20151201 15:56:09.883"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>...</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.899" starttime="20151201 15:56:09.897"></status>
</kw>
<msg timestamp="20151201 15:56:09.901" level="INFO">${ocs_rc} = OK</msg>
<msg timestamp="20151201 15:56:09.902" level="INFO">${ocs_version} = I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151201 15:56:09.901" starttime="20151201 15:56:09.366"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>IN state= ${in_rc} version=${in_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151201 15:56:09.905" level="INFO">IN state= OK version= 1.0.0 2015.11.12-14:31:57 </msg>
<status status="PASS" endtime="20151201 15:56:09.906" starttime="20151201 15:56:09.903"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>XDR state= ${xdr_rc} version=${xdr_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151201 15:56:09.910" level="INFO">XDR state= OK version=I-New UMS MVNO - XDR 6.2.0 </msg>
<status status="PASS" endtime="20151201 15:56:09.911" starttime="20151201 15:56:09.907"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>CRCE state= ${crce_rc} version=${crce_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151201 15:56:09.915" level="INFO">CRCE state= OK version= 6.2.0.30830 </msg>
<status status="PASS" endtime="20151201 15:56:09.915" starttime="20151201 15:56:09.912"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>OCS state= ${ocs_rc} version=${ocs_version}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151201 15:56:09.919" level="INFO">OCS state= OK version=I-New MVNO GyApp - Diameter Gy Application 6.1.0.2088
GyApp </msg>
<status status="PASS" endtime="20151201 15:56:09.920" starttime="20151201 15:56:09.917"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${in_rc}</arg>
<arg>OK</arg>
<arg>msg=IN</arg>
</arguments>
<msg timestamp="20151201 15:56:09.923" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151201 15:56:09.924" starttime="20151201 15:56:09.921"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${xdr_rc}</arg>
<arg>OK</arg>
<arg>msg=XDR</arg>
</arguments>
<msg timestamp="20151201 15:56:09.928" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151201 15:56:09.928" starttime="20151201 15:56:09.925"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${crce_rc}</arg>
<arg>OK</arg>
<arg>msg=CRCE</arg>
</arguments>
<msg timestamp="20151201 15:56:09.932" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151201 15:56:09.933" starttime="20151201 15:56:09.929"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ocs_rc}</arg>
<arg>OK</arg>
<arg>msg=OCS</arg>
</arguments>
<msg timestamp="20151201 15:56:09.936" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151201 15:56:09.937" starttime="20151201 15:56:09.934"></status>
</kw>
<kw type="kw" name="${temp} = BuiltIn.Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${SUT PROJECT TAG PREFIX}'=='MTEL'</arg>
<arg>${ROBOT WORKSPACE PATH}/external_tests/experimental/matko.sanseovic/reroute_changes</arg>
<arg>'${SUT PROJECT TAG PREFIX}'!=''</arg>
<arg>${CG UNIFIED WS PATH}</arg>
</arguments>
<msg timestamp="20151201 15:56:09.944" level="INFO">${temp} = /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes</msg>
<status status="PASS" endtime="20151201 15:56:09.943" starttime="20151201 15:56:09.938"></status>
</kw>
<kw type="kw" name="BuiltIn.Set Global Variable">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${temp}</arg>
</arguments>
<msg timestamp="20151201 15:56:09.947" level="INFO">${CG UNIFIED WS PATH} = /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes</msg>
<status status="PASS" endtime="20151201 15:56:09.948" starttime="20151201 15:56:09.945"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:09.949" starttime="20151201 15:56:06.705"></status>
</kw>
<test id="s1-t1" name="Run MOC Busy Call">
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Create test subscribers *******</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:09.969" starttime="20151201 15:56:09.967"></status>
</kw>
<kw type="kw" name="${INITIAL_BALANCE} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10000000</arg>
</arguments>
<msg timestamp="20151201 15:56:09.972" level="INFO">${INITIAL_BALANCE} = 10000000</msg>
<status status="PASS" endtime="20151201 15:56:09.971" starttime="20151201 15:56:09.970"></status>
</kw>
<kw type="kw" name="${return_code} = subscriber-admin-support-resource.CRCE Create Test Subscribers">
<doc>Provisions one or multiple test subscribers on CRCE only.</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>1</arg>
<arg>${TESTSUBCRIBERS PP IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS PP MSISDN RANGE START}</arg>
<arg>PREPAID</arg>
<arg>${TESTSUBCRIBERS DEFAULT LANGUAGEID}</arg>
<arg>${TESTSUBCRIBERS DEFAULT TARIFFID}</arg>
<arg>${INITIAL_BALANCE}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20151201 15:56:09.990" level="INFO">msg=crce_host=10.105.125.159</msg>
<status status="PASS" endtime="20151201 15:56:09.991" starttime="20151201 15:56:09.989"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20151201 15:56:09.994" level="INFO">msg=crce_port=8080</msg>
<status status="PASS" endtime="20151201 15:56:09.995" starttime="20151201 15:56:09.992"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20151201 15:56:09.998" level="INFO">msg=crce_webservicesBasePath=/inew-mvno-crce-webservices/</msg>
<status status="PASS" endtime="20151201 15:56:09.999" starttime="20151201 15:56:09.996"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=amount=${amount}</arg>
</arguments>
<msg timestamp="20151201 15:56:10.002" level="INFO">msg=amount=1</msg>
<status status="PASS" endtime="20151201 15:56:10.002" starttime="20151201 15:56:10.000"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<msg timestamp="20151201 15:56:10.005" level="INFO">msg=imsiRangeStart=232201667725500</msg>
<status status="PASS" endtime="20151201 15:56:10.006" starttime="20151201 15:56:10.003"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<msg timestamp="20151201 15:56:10.009" level="INFO">msg=msisdnRangeStart=43667725500</msg>
<status status="PASS" endtime="20151201 15:56:10.010" starttime="20151201 15:56:10.007"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=type=${type}</arg>
</arguments>
<msg timestamp="20151201 15:56:10.013" level="INFO">msg=type=PREPAID</msg>
<status status="PASS" endtime="20151201 15:56:10.013" starttime="20151201 15:56:10.011"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=languageid=${languageid}</arg>
</arguments>
<msg timestamp="20151201 15:56:10.017" level="INFO">msg=languageid=1</msg>
<status status="PASS" endtime="20151201 15:56:10.017" starttime="20151201 15:56:10.014"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=tariffId=${tariffId}</arg>
</arguments>
<msg timestamp="20151201 15:56:10.020" level="INFO">msg=tariffId=101001</msg>
<status status="PASS" endtime="20151201 15:56:10.021" starttime="20151201 15:56:10.018"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=balance=${balance}</arg>
</arguments>
<msg timestamp="20151201 15:56:10.024" level="INFO">msg=balance=10000000</msg>
<status status="PASS" endtime="20151201 15:56:10.025" starttime="20151201 15:56:10.022"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151201 15:56:10.040" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:10.041" starttime="20151201 15:56:10.037"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:10.042" starttime="20151201 15:56:10.035"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151201 15:56:10.048" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:10.049" starttime="20151201 15:56:10.045"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:10.049" starttime="20151201 15:56:10.043"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151201 15:56:10.055" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:10.056" starttime="20151201 15:56:10.053"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:10.057" starttime="20151201 15:56:10.051"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:10.058" starttime="20151201 15:56:10.027"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151201 15:56:10.063" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151201 15:56:10.064" starttime="20151201 15:56:10.059"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:10.067" starttime="20151201 15:56:10.065"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:10.070" starttime="20151201 15:56:10.068"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:10.073" starttime="20151201 15:56:10.071"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>HighLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:10.076" starttime="20151201 15:56:10.074"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>createTestSubscribers</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:10.079" starttime="20151201 15:56:10.077"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.amount=${amount}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:10.112" starttime="20151201 15:56:10.080"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.imsiRangeStart=${imsiRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:10.117" starttime="20151201 15:56:10.115"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.msisdnRangeStart=${msisdnRangeStart}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:10.121" starttime="20151201 15:56:10.119"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.type=${type}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:10.124" starttime="20151201 15:56:10.122"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.languageid=${languageid}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:10.128" starttime="20151201 15:56:10.125"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.tariffId=${tariffId}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:10.131" starttime="20151201 15:56:10.129"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.input.balance=${balance}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:10.134" starttime="20151201 15:56:10.132"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151201 15:56:10.138" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000']</msg>
<msg timestamp="20151201 15:56:15.322" level="INFO">15:56:10,329 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/ext] for external libraries
15:56:10,329 INFO  [DefaultSoapUICore] Creating new settings at [/root/soapui-settings.xml]
15:56:12,773 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/libs/global-keyword-resources/crce-subscriberadmin/robot_crce_bridge-soapui-project.xml]
15:56:12,792 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.125.159]
15:56:12,792 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8080]
15:56:12,792 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/inew-mvno-crce-webservices/]
15:56:12,792 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.amount] to [1]
15:56:12,793 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.imsiRangeStart] to [232201667725500]
15:56:12,793 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.msisdnRangeStart] to [43667725500]
15:56:12,793 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.type] to [PREPAID]
15:56:12,793 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.languageid] to [1]
15:56:12,793 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.tariffId] to [101001]
15:56:12,793 INFO  [SoapUITestCaseRunner] Setting project property [HighLevelOps.createTestSubscribers.input.balance] to [10000000]
15:56:12,794 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [Robotframework_CRCE-Bridge]
15:56:12,794 INFO  [SoapUITestCaseRunner] Running TestCase [createTestSubscribers]
15:56:12,803 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [createTestSubscribers]
15:56:12,809 INFO  [SoapUITestCaseRunner] running step [init_repeat_counter]
15:56:13,411 INFO  [SoapUITestCaseRunner] running step [01_init_next_subscriber]
15:56:13,472 INFO  [SoapUITestCaseRunner] running step [getSubscriberProfileByImsi]
15:56:13,767 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:56:13,767 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:56:13,793 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:56:13,800 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:56:13,975 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:56:13,975 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:56:13,975 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:56:13,976 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
15:56:14,057 INFO  [SoapUITestCaseRunner] running step [transfer_response_values]
15:56:14,319 INFO  [SoapUITestCaseRunner] running step [cancel_on_CRCE_error_OR_skip_delete_on_UnknownSubscriber]
15:56:14,345 INFO  [SoapUITestCaseRunner] running step [deleteSubscriber]
15:56:14,347 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:56:14,348 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:56:14,348 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:56:14,484 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:56:14,485 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:56:14,492 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:56:14,492 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:56:14,492 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:56:14,493 INFO  [SoapUITestCaseRunner] running step [2nd_cancel_on_SOAP_error]
15:56:14,558 INFO  [SoapUITestCaseRunner] running step [2nd_transfer_response_values]
15:56:14,564 INFO  [SoapUITestCaseRunner] running step [cancel_on_deletion_error]
15:56:14,612 INFO  [SoapUITestCaseRunner] running step [02_createSubscriber]
15:56:14,616 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:56:14,618 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:56:14,618 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/provisioning HTTP/1.1
15:56:14,633 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:56:14,633 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:56:14,639 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:56:14,640 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:56:14,640 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:56:14,640 INFO  [SoapUITestCaseRunner] running step [3rd_cancel_on_SOAP_error]
15:56:14,706 INFO  [SoapUITestCaseRunner] running step [3rd_transfer_response_values]
15:56:14,717 INFO  [SoapUITestCaseRunner] running step [cancel_on_create_error]
15:56:14,782 INFO  [SoapUITestCaseRunner] running step [activateSubscriber]
15:56:14,786 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:56:14,788 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:56:14,788 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/profiler/subscriber HTTP/1.1
15:56:14,857 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:56:14,857 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:56:14,864 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:56:14,864 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:56:14,864 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:56:14,865 INFO  [SoapUITestCaseRunner] running step [4th_cancel_on_SOAP_error]
15:56:14,909 INFO  [SoapUITestCaseRunner] running step [4th_transfer_response_values]
15:56:14,912 INFO  [SoapUITestCaseRunner] running step [cancel_on_activate_error]
15:56:14,931 INFO  [SoapUITestCaseRunner] running step [getMainAccount]
15:56:14,932 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:56:14,934 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:56:14,934 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/accounts HTTP/1.1
15:56:14,959 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:56:14,959 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:56:14,968 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:56:14,968 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:56:14,968 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:56:14,968 INFO  [SoapUITestCaseRunner] running step [5th_cancel_on_SOAP_error]
15:56:15,025 INFO  [SoapUITestCaseRunner] running step [5th_transfer_response_values]
15:56:15,041 INFO  [SoapUITestCaseRunner] running step [cancel_on_getmainaccount_error]
15:56:15,073 INFO  [SoapUITestCaseRunner] running step [setBalance]
15:56:15,075 DEBUG [HttpClientSupport$SoapUIHttpClient] Stale connection check
15:56:15,077 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
15:56:15,077 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /inew-mvno-crce-webservices/accounting/account_administration HTTP/1.1
15:56:15,132 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
15:56:15,132 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
15:56:15,141 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
15:56:15,142 INFO  [SoapUITestCaseRunner] Assertion [Schema Compliance] has status UNKNOWN
15:56:15,142 INFO  [SoapUITestCaseRunner] Assertion [Not SOAP Fault] has status VALID
15:56:15,142 INFO  [SoapUITestCaseRunner] running step [6th_cancel_on_SOAP_error]
15:56:15,203 INFO  [SoapUITestCaseRunner] running step [6th_transfer_response_values]
15:56:15,213 INFO  [SoapUITestCaseRunner] running step [cancel_on_setbalance_error]
15:56:15,255 INFO  [SoapUITestCaseRunner] running step [repeat_01_amount_times]
15:56:15,287 INFO  [SoapUITestCaseRunner] running step [finish_successful]
15:56:15,319 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK
15:56:15,319 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [createTestSubscribers], time taken: 2481ms, status: FINISHED
15:56:15,319 INFO  [SoapUITestCaseRunner] TestCase [createTestSubscribers] finished with status [FINISHED] in 2481ms</msg>
<status status="PASS" endtime="20151201 15:56:15.326" starttime="20151201 15:56:10.137"></status>
</kw>
<msg timestamp="20151201 15:56:15.330" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:15.330" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151201 15:56:15.328" starttime="20151201 15:56:10.135"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>HighLevelOps.createTestSubscribers.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:15.347" level="INFO">${return_marker} = HighLevelOps.createTestSubscribers.output.resultCode=</msg>
<status status="PASS" endtime="20151201 15:56:15.346" starttime="20151201 15:56:15.343"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:15.351" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:15.350" starttime="20151201 15:56:15.348"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:15.355" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:15.354" starttime="20151201 15:56:15.352"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:15.362" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:15.367" level="INFO">1 out of 1 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:15.368" starttime="20151201 15:56:15.359"></status>
</kw>
<msg timestamp="20151201 15:56:15.370" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:15.371" level="INFO">${return_log_entry} = 2015-12-01 15:56:15,319 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151201 15:56:15.369" starttime="20151201 15:56:15.356"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:15.381" starttime="20151201 15:56:15.379"></status>
</kw>
<msg timestamp="20151201 15:56:15.383" level="INFO">${return_log_entry} = 2015-12-01 15:56:15,319 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151201 15:56:15.382" starttime="20151201 15:56:15.373"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:15.392" starttime="20151201 15:56:15.389"></status>
</kw>
<msg timestamp="20151201 15:56:15.394" level="INFO">${return_log_entry} = 2015-12-01 15:56:15,319 INFO  [log] HighLevelOps.createTestSubscribers.output.resultCode=OK</msg>
<status status="PASS" endtime="20151201 15:56:15.393" starttime="20151201 15:56:15.384"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:15.404" starttime="20151201 15:56:15.401"></status>
</kw>
<msg timestamp="20151201 15:56:15.405" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:15.405" starttime="20151201 15:56:15.395"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:15.417" starttime="20151201 15:56:15.415"></status>
</kw>
<msg timestamp="20151201 15:56:15.419" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:15.418" starttime="20151201 15:56:15.407"></status>
</kw>
<msg timestamp="20151201 15:56:15.421" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:15.421" starttime="20151201 15:56:15.333"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>HighLevelOps-CreateTestSubscribers</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:15.434" starttime="20151201 15:56:15.432"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:15.437" starttime="20151201 15:56:15.435"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:15.439" starttime="20151201 15:56:15.438"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151201 15:56:15.454" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/HighLevelOps-CreateTestSubscribers*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/HighLevelOps-CreateTestSubscribers*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151201 15:56:15.455" starttime="20151201 15:56:15.447"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:15.456" starttime="20151201 15:56:15.445"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:15.457" starttime="20151201 15:56:15.441"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:15.458" starttime="20151201 15:56:15.423"></status>
</kw>
<msg timestamp="20151201 15:56:15.460" level="INFO">${return_code} = OK</msg>
<status status="PASS" endtime="20151201 15:56:15.459" starttime="20151201 15:56:09.975"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20151201 15:56:15.464" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151201 15:56:15.464" starttime="20151201 15:56:15.462"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Test Postpaid Subscribers Created!</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151201 15:56:15.467" level="INFO">Test Postpaid Subscribers Created!</msg>
<status status="PASS" endtime="20151201 15:56:15.468" starttime="20151201 15:56:15.465"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Run MOC Busy *******</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:15.471" starttime="20151201 15:56:15.469"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Running the MOC busy call...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151201 15:56:15.474" level="INFO">Running the MOC busy call...</msg>
<status status="PASS" endtime="20151201 15:56:15.474" starttime="20151201 15:56:15.472"></status>
</kw>
<kw type="kw" name="${rc} = cg_support-resource.CG Run MOC Busy">
<doc>Runs an busy MOC session</doc>
<arguments>
<arg>${TESTSUBCRIBERS IMSI RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
<arg>${MSC ADDRESS}</arg>
<arg>${CALLSGEN HOME}</arg>
<arg>${CALLSGEN JAR NAME}</arg>
<arg>${CG UNIFIED WS PATH}</arg>
<arg>${AMQ-SIG HOST}</arg>
<arg>${AMQ-SIG PORT}</arg>
<arg>${AMQ-SIG MOC REQ QUEUE}</arg>
<arg>${AMQ-SIG MOC RES QUEUE}</arg>
</arguments>
<kw type="kw" name="${rc} = cg_support-resource.CG Run Standard MOC CGS">
<doc>Runs a standard MOC session (meaning a session that needs only mscAddress and mocBPartyMsisdn parameters) for the passed cgs file</doc>
<arguments>
<arg>moc-busy</arg>
<arg>${cg_imsi}</arg>
<arg>${cg_msisdn}</arg>
<arg>${cd_msisdn}</arg>
<arg>${msc_address}</arg>
<arg>${callsgen_home}</arg>
<arg>${callsgen_jar_name}</arg>
<arg>${callsgen_unified_workspace_absolute_path}</arg>
<arg>${amq_host}</arg>
<arg>${amq_port}</arg>
<arg>${queue_moc_req}</arg>
<arg>${queue_moc_res}</arg>
</arguments>
<kw type="kw" name="${subscribers_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-subscribers.csv</arg>
</arguments>
<msg timestamp="20151201 15:56:15.511" level="INFO">${subscribers_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-subscribers.csv</msg>
<status status="PASS" endtime="20151201 15:56:15.511" starttime="20151201 15:56:15.509"></status>
</kw>
<kw type="kw" name="${flexml_csv_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-fleXml.csv</arg>
</arguments>
<msg timestamp="20151201 15:56:15.515" level="INFO">${flexml_csv_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-fleXml.csv</msg>
<status status="PASS" endtime="20151201 15:56:15.515" starttime="20151201 15:56:15.513"></status>
</kw>
<kw type="kw" name="${workspace_ini_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/${cgs_filename}-workspace.ini</arg>
</arguments>
<msg timestamp="20151201 15:56:15.519" level="INFO">${workspace_ini_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-workspace.ini</msg>
<status status="PASS" endtime="20151201 15:56:15.519" starttime="20151201 15:56:15.517"></status>
</kw>
<kw type="kw" name="${cgs_absolute_path} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/${cgs_filename}.cgs</arg>
</arguments>
<msg timestamp="20151201 15:56:15.523" level="INFO">${cgs_absolute_path} = /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-busy.cgs</msg>
<status status="PASS" endtime="20151201 15:56:15.523" starttime="20151201 15:56:15.521"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create subscribers.csv ******</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:15.526" starttime="20151201 15:56:15.524"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${subscribers_csv_absolute_path}</arg>
<arg>${cg_imsi};${cg_msisdn}\n</arg>
</arguments>
<msg timestamp="20151201 15:56:15.531" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-subscribers.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-subscribers.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:15.532" starttime="20151201 15:56:15.527"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create fleXml ******</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:15.534" starttime="20151201 15:56:15.533"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>\#Header: comment;mscAddress;mocBPartyMsisdn\n</arg>
</arguments>
<msg timestamp="20151201 15:56:15.539" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:15.539" starttime="20151201 15:56:15.536"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${flexml_csv_absolute_path}</arg>
<arg>${cgs_filename} parameters;${msc_address};${cd_msisdn}\n</arg>
</arguments>
<msg timestamp="20151201 15:56:15.545" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-fleXml.csv"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-fleXml.csv&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:15.545" starttime="20151201 15:56:15.541"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** create workspace.ini ******</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:15.548" starttime="20151201 15:56:15.546"></status>
</kw>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>${WORKSPACE_INI_DEFAULTS}</arg>
</arguments>
<msg timestamp="20151201 15:56:15.552" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:15.553" starttime="20151201 15:56:15.549"></status>
</kw>
<kw type="kw" name="OperatingSystem.Append To File">
<doc>Appends the given contend to the specified file.</doc>
<arguments>
<arg>${workspace_ini_absolute_path}</arg>
<arg>\ninAMQHost=${amq_host} \ninAMQPort=${amq_port} \ninQueuePair1=true;CAP2_MOC;${queue_moc_req};${queue_moc_res};6;1;1</arg>
</arguments>
<msg timestamp="20151201 15:56:15.559" html="yes" level="INFO">Appended to file '&lt;a href="file:///opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-workspace.ini"&gt;/opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-workspace.ini&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:15.560" starttime="20151201 15:56:15.554"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>****** Exec CG ******</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:15.563" starttime="20151201 15:56:15.561"></status>
</kw>
<kw type="kw" name="${rc} = OperatingSystem.Run And Return Rc">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>cd ${callsgen_home};java -jar ${callsgen_jar_name} ${cgs_absolute_path} ${callsgen_unified_workspace_absolute_path} -i ${workspace_ini_absolute_path} -s ${subscribers_csv_absolute_path} -f ${flexml_csv_absolute_path}</arg>
</arguments>
<msg timestamp="20151201 15:56:15.575" level="INFO">Running command 'cd /opt/callsGenerator;java -jar callsgen-6.1.0.jar /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/moc-busy.cgs /opt/robot/robotworkspace/external_tests/experimental/matko.sanseovic/reroute_changes -i /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-workspace.ini -s /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-subscribers.csv -f /opt/robot/robotworkspace/libs/global-keyword-resources/cg-support/tmp/moc-busy-fleXml.csv 2&gt;&amp;1'</msg>
<msg timestamp="20151201 15:56:29.040" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151201 15:56:29.036" starttime="20151201 15:56:15.564"></status>
</kw>
<msg timestamp="20151201 15:56:29.045" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151201 15:56:29.043" starttime="20151201 15:56:15.494"></status>
</kw>
<msg timestamp="20151201 15:56:29.050" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20151201 15:56:29.048" starttime="20151201 15:56:15.477"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>...do the checks...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151201 15:56:29.057" level="INFO">...do the checks...</msg>
<status status="PASS" endtime="20151201 15:56:29.059" starttime="20151201 15:56:29.053"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Numbers">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
<arg>msg=CG Session ended with rc ${rc}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.067" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20151201 15:56:29.069" starttime="20151201 15:56:29.062"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>******* Checking Subscriber's Account Balance *******</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.075" starttime="20151201 15:56:29.072"></status>
</kw>
<kw type="kw" name="${rc}, ${provId}, ${imsi}, ${id}, ${state}, ${tariffId}, ${type} = subscriber-admin-support-resource.CRCE Get Subscriber Profile">
<doc>This is a delegator to the CRCE webservice operation getSubcriberProfile and returnes (not all but) the most interesting profile attributes</doc>
<arguments>
<arg>${CRCE01 HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${TESTSUBCRIBERS MSISDN RANGE START}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.127" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:29.129" starttime="20151201 15:56:29.122"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:29.131" starttime="20151201 15:56:29.117"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.143" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:29.145" starttime="20151201 15:56:29.138"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:29.147" starttime="20151201 15:56:29.134"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.159" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:29.161" starttime="20151201 15:56:29.154"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:29.163" starttime="20151201 15:56:29.149"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:29.165" starttime="20151201 15:56:29.103"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.173" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151201 15:56:29.174" starttime="20151201 15:56:29.167"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.180" starttime="20151201 15:56:29.176"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.187" starttime="20151201 15:56:29.183"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.194" starttime="20151201 15:56:29.189"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.200" starttime="20151201 15:56:29.196"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getSubscriberProfile</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.205" starttime="20151201 15:56:29.202"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.input.msisdn=${msisdn}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.211" starttime="20151201 15:56:29.207"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151201 15:56:29.220" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725900']</msg>
<msg timestamp="20151201 15:56:29.675" level="INFO">15:56:29,670 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK
15:56:29,670 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1
15:56:29,671 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=165794
15:56:29,671 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725900
15:56:29,672 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE
15:56:29,672 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001
15:56:29,673 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID
15:56:29,673 INFO  [log] LowLevelOps.getSubscriberProfile.output.languageId=1</msg>
<status status="PASS" endtime="20151201 15:56:29.676" starttime="20151201 15:56:29.217"></status>
</kw>
<msg timestamp="20151201 15:56:29.677" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:29.678" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151201 15:56:29.677" starttime="20151201 15:56:29.214"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:29.689" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.resultCode=</msg>
<status status="PASS" endtime="20151201 15:56:29.689" starttime="20151201 15:56:29.686"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.693" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:29.692" starttime="20151201 15:56:29.690"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.696" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:29.696" starttime="20151201 15:56:29.694"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.702" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:29.707" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:29.708" starttime="20151201 15:56:29.700"></status>
</kw>
<msg timestamp="20151201 15:56:29.709" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:29.710" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,670 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151201 15:56:29.708" starttime="20151201 15:56:29.697"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.718" starttime="20151201 15:56:29.716"></status>
</kw>
<msg timestamp="20151201 15:56:29.720" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,670 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151201 15:56:29.719" starttime="20151201 15:56:29.711"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.728" starttime="20151201 15:56:29.726"></status>
</kw>
<msg timestamp="20151201 15:56:29.729" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,670 INFO  [log] LowLevelOps.getSubscriberProfile.output.resultCode=OK</msg>
<status status="PASS" endtime="20151201 15:56:29.729" starttime="20151201 15:56:29.721"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.738" starttime="20151201 15:56:29.736"></status>
</kw>
<msg timestamp="20151201 15:56:29.739" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:29.739" starttime="20151201 15:56:29.731"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.750" starttime="20151201 15:56:29.748"></status>
</kw>
<msg timestamp="20151201 15:56:29.751" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:29.751" starttime="20151201 15:56:29.740"></status>
</kw>
<msg timestamp="20151201 15:56:29.753" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:29.752" starttime="20151201 15:56:29.680"></status>
</kw>
<kw type="kw" name="${providerId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.providerId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:29.765" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.providerId=</msg>
<status status="PASS" endtime="20151201 15:56:29.764" starttime="20151201 15:56:29.762"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.768" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:29.768" starttime="20151201 15:56:29.766"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.772" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:29.771" starttime="20151201 15:56:29.769"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.777" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:29.782" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:29.782" starttime="20151201 15:56:29.775"></status>
</kw>
<msg timestamp="20151201 15:56:29.784" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:29.784" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,670 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151201 15:56:29.783" starttime="20151201 15:56:29.773"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.823" starttime="20151201 15:56:29.820"></status>
</kw>
<msg timestamp="20151201 15:56:29.825" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,670 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151201 15:56:29.824" starttime="20151201 15:56:29.786"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.834" starttime="20151201 15:56:29.832"></status>
</kw>
<msg timestamp="20151201 15:56:29.835" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,670 INFO  [log] LowLevelOps.getSubscriberProfile.output.providerId=1</msg>
<status status="PASS" endtime="20151201 15:56:29.835" starttime="20151201 15:56:29.826"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.845" starttime="20151201 15:56:29.842"></status>
</kw>
<msg timestamp="20151201 15:56:29.847" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151201 15:56:29.846" starttime="20151201 15:56:29.836"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.857" starttime="20151201 15:56:29.855"></status>
</kw>
<msg timestamp="20151201 15:56:29.860" level="INFO">${resultCode} = 1</msg>
<status status="PASS" endtime="20151201 15:56:29.859" starttime="20151201 15:56:29.848"></status>
</kw>
<msg timestamp="20151201 15:56:29.864" level="INFO">${providerId} = 1</msg>
<status status="PASS" endtime="20151201 15:56:29.863" starttime="20151201 15:56:29.755"></status>
</kw>
<kw type="kw" name="${imsi} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.imsi</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:29.888" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.imsi=</msg>
<status status="PASS" endtime="20151201 15:56:29.887" starttime="20151201 15:56:29.882"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.895" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:29.894" starttime="20151201 15:56:29.891"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.901" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:29.900" starttime="20151201 15:56:29.897"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.911" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:29.919" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:29.920" starttime="20151201 15:56:29.907"></status>
</kw>
<msg timestamp="20151201 15:56:29.923" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:29.924" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,671 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725900</msg>
<status status="PASS" endtime="20151201 15:56:29.922" starttime="20151201 15:56:29.903"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.938" starttime="20151201 15:56:29.935"></status>
</kw>
<msg timestamp="20151201 15:56:29.940" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,671 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725900</msg>
<status status="PASS" endtime="20151201 15:56:29.939" starttime="20151201 15:56:29.926"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.951" starttime="20151201 15:56:29.948"></status>
</kw>
<msg timestamp="20151201 15:56:29.953" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,671 INFO  [log] LowLevelOps.getSubscriberProfile.output.imsi=232201667725900</msg>
<status status="PASS" endtime="20151201 15:56:29.952" starttime="20151201 15:56:29.942"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.962" starttime="20151201 15:56:29.960"></status>
</kw>
<msg timestamp="20151201 15:56:29.964" level="INFO">${resultCode} = 232201667725900</msg>
<status status="PASS" endtime="20151201 15:56:29.964" starttime="20151201 15:56:29.954"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:29.976" starttime="20151201 15:56:29.974"></status>
</kw>
<msg timestamp="20151201 15:56:29.978" level="INFO">${resultCode} = 232201667725900</msg>
<status status="PASS" endtime="20151201 15:56:29.977" starttime="20151201 15:56:29.965"></status>
</kw>
<msg timestamp="20151201 15:56:29.980" level="INFO">${imsi} = 232201667725900</msg>
<status status="PASS" endtime="20151201 15:56:29.980" starttime="20151201 15:56:29.869"></status>
</kw>
<kw type="kw" name="${id} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.id</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:29.994" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.id=</msg>
<status status="PASS" endtime="20151201 15:56:29.994" starttime="20151201 15:56:29.991"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:29.998" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:29.998" starttime="20151201 15:56:29.996"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.003" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:30.002" starttime="20151201 15:56:30.000"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.010" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:30.017" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:30.018" starttime="20151201 15:56:30.007"></status>
</kw>
<msg timestamp="20151201 15:56:30.020" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:30.020" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,671 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=165794</msg>
<status status="PASS" endtime="20151201 15:56:30.019" starttime="20151201 15:56:30.005"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.031" starttime="20151201 15:56:30.028"></status>
</kw>
<msg timestamp="20151201 15:56:30.033" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,671 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=165794</msg>
<status status="PASS" endtime="20151201 15:56:30.032" starttime="20151201 15:56:30.022"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.044" starttime="20151201 15:56:30.041"></status>
</kw>
<msg timestamp="20151201 15:56:30.045" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,671 INFO  [log] LowLevelOps.getSubscriberProfile.output.id=165794</msg>
<status status="PASS" endtime="20151201 15:56:30.045" starttime="20151201 15:56:30.034"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.056" starttime="20151201 15:56:30.053"></status>
</kw>
<msg timestamp="20151201 15:56:30.058" level="INFO">${resultCode} = 165794</msg>
<status status="PASS" endtime="20151201 15:56:30.058" starttime="20151201 15:56:30.047"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.072" starttime="20151201 15:56:30.069"></status>
</kw>
<msg timestamp="20151201 15:56:30.074" level="INFO">${resultCode} = 165794</msg>
<status status="PASS" endtime="20151201 15:56:30.073" starttime="20151201 15:56:30.060"></status>
</kw>
<msg timestamp="20151201 15:56:30.077" level="INFO">${id} = 165794</msg>
<status status="PASS" endtime="20151201 15:56:30.075" starttime="20151201 15:56:29.983"></status>
</kw>
<kw type="kw" name="${state} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.state</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:30.091" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.state=</msg>
<status status="PASS" endtime="20151201 15:56:30.091" starttime="20151201 15:56:30.088"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.096" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:30.095" starttime="20151201 15:56:30.093"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.100" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:30.099" starttime="20151201 15:56:30.097"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.107" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:30.113" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:30.114" starttime="20151201 15:56:30.104"></status>
</kw>
<msg timestamp="20151201 15:56:30.116" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:30.117" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,672 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151201 15:56:30.115" starttime="20151201 15:56:30.101"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.127" starttime="20151201 15:56:30.124"></status>
</kw>
<msg timestamp="20151201 15:56:30.129" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,672 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151201 15:56:30.128" starttime="20151201 15:56:30.118"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.138" starttime="20151201 15:56:30.136"></status>
</kw>
<msg timestamp="20151201 15:56:30.140" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,672 INFO  [log] LowLevelOps.getSubscriberProfile.output.state=ACTIVE</msg>
<status status="PASS" endtime="20151201 15:56:30.140" starttime="20151201 15:56:30.130"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.149" starttime="20151201 15:56:30.146"></status>
</kw>
<msg timestamp="20151201 15:56:30.150" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151201 15:56:30.149" starttime="20151201 15:56:30.142"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.160" starttime="20151201 15:56:30.158"></status>
</kw>
<msg timestamp="20151201 15:56:30.161" level="INFO">${resultCode} = ACTIVE</msg>
<status status="PASS" endtime="20151201 15:56:30.160" starttime="20151201 15:56:30.151"></status>
</kw>
<msg timestamp="20151201 15:56:30.163" level="INFO">${state} = ACTIVE</msg>
<status status="PASS" endtime="20151201 15:56:30.162" starttime="20151201 15:56:30.079"></status>
</kw>
<kw type="kw" name="${tariffId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.tariffId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:30.173" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.tariffId=</msg>
<status status="PASS" endtime="20151201 15:56:30.173" starttime="20151201 15:56:30.171"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.176" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:30.176" starttime="20151201 15:56:30.174"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.179" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:30.179" starttime="20151201 15:56:30.177"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.184" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:30.189" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:30.189" starttime="20151201 15:56:30.182"></status>
</kw>
<msg timestamp="20151201 15:56:30.191" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:30.191" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,672 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20151201 15:56:30.190" starttime="20151201 15:56:30.180"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.198" starttime="20151201 15:56:30.197"></status>
</kw>
<msg timestamp="20151201 15:56:30.200" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,672 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20151201 15:56:30.199" starttime="20151201 15:56:30.192"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.207" starttime="20151201 15:56:30.205"></status>
</kw>
<msg timestamp="20151201 15:56:30.208" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,672 INFO  [log] LowLevelOps.getSubscriberProfile.output.tariffId=101001</msg>
<status status="PASS" endtime="20151201 15:56:30.208" starttime="20151201 15:56:30.201"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.217" starttime="20151201 15:56:30.214"></status>
</kw>
<msg timestamp="20151201 15:56:30.218" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20151201 15:56:30.218" starttime="20151201 15:56:30.209"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.228" starttime="20151201 15:56:30.226"></status>
</kw>
<msg timestamp="20151201 15:56:30.229" level="INFO">${resultCode} = 101001</msg>
<status status="PASS" endtime="20151201 15:56:30.229" starttime="20151201 15:56:30.219"></status>
</kw>
<msg timestamp="20151201 15:56:30.231" level="INFO">${tariffId} = 101001</msg>
<status status="PASS" endtime="20151201 15:56:30.230" starttime="20151201 15:56:30.164"></status>
</kw>
<kw type="kw" name="${type} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getSubscriberProfile.output.type</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:30.242" level="INFO">${return_marker} = LowLevelOps.getSubscriberProfile.output.type=</msg>
<status status="PASS" endtime="20151201 15:56:30.241" starttime="20151201 15:56:30.239"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.245" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:30.244" starttime="20151201 15:56:30.243"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.248" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:30.247" starttime="20151201 15:56:30.246"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.253" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:30.257" level="INFO">1 out of 8 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:30.257" starttime="20151201 15:56:30.250"></status>
</kw>
<msg timestamp="20151201 15:56:30.259" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:30.259" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,673 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20151201 15:56:30.258" starttime="20151201 15:56:30.249"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.266" starttime="20151201 15:56:30.264"></status>
</kw>
<msg timestamp="20151201 15:56:30.268" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,673 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20151201 15:56:30.267" starttime="20151201 15:56:30.260"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.275" starttime="20151201 15:56:30.273"></status>
</kw>
<msg timestamp="20151201 15:56:30.276" level="INFO">${return_log_entry} = 2015-12-01 15:56:29,673 INFO  [log] LowLevelOps.getSubscriberProfile.output.type=PREPAID</msg>
<status status="PASS" endtime="20151201 15:56:30.275" starttime="20151201 15:56:30.269"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.284" starttime="20151201 15:56:30.281"></status>
</kw>
<msg timestamp="20151201 15:56:30.285" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20151201 15:56:30.284" starttime="20151201 15:56:30.277"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.294" starttime="20151201 15:56:30.293"></status>
</kw>
<msg timestamp="20151201 15:56:30.296" level="INFO">${resultCode} = PREPAID</msg>
<status status="PASS" endtime="20151201 15:56:30.295" starttime="20151201 15:56:30.286"></status>
</kw>
<msg timestamp="20151201 15:56:30.297" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20151201 15:56:30.297" starttime="20151201 15:56:30.233"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetSubscriberProfile</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.306" starttime="20151201 15:56:30.305"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.309" starttime="20151201 15:56:30.307"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.311" starttime="20151201 15:56:30.310"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151201 15:56:30.323" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/LowLevelOps-GetSubscriberProfile*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/LowLevelOps-GetSubscriberProfile*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151201 15:56:30.324" starttime="20151201 15:56:30.318"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:30.324" starttime="20151201 15:56:30.316"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:30.325" starttime="20151201 15:56:30.312"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:30.326" starttime="20151201 15:56:30.299"></status>
</kw>
<msg timestamp="20151201 15:56:30.330" level="INFO">${rc} = OK</msg>
<msg timestamp="20151201 15:56:30.330" level="INFO">${provId} = 1</msg>
<msg timestamp="20151201 15:56:30.331" level="INFO">${imsi} = 232201667725900</msg>
<msg timestamp="20151201 15:56:30.331" level="INFO">${id} = 165794</msg>
<msg timestamp="20151201 15:56:30.331" level="INFO">${state} = ACTIVE</msg>
<msg timestamp="20151201 15:56:30.332" level="INFO">${tariffId} = 101001</msg>
<msg timestamp="20151201 15:56:30.332" level="INFO">${type} = PREPAID</msg>
<status status="PASS" endtime="20151201 15:56:30.328" starttime="20151201 15:56:29.082"></status>
</kw>
<kw type="kw" name="${resultCode}, ${accId}, ${bal}, ${cat}, ${curr} = subscriber-admin-support-resource.CRCE Get Main Account">
<doc>This is a delegator to the CRCE webservice operation getMainAccount and returnes (not all but) the most interesting account attributes</doc>
<arguments>
<arg>${CRCE HOST}</arg>
<arg>${CRCE01 WEBSERVICES PORT}</arg>
<arg>${CRCE01 WEBSERVICES BASE PATH}</arg>
<arg>${id}</arg>
</arguments>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.353" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:30.354" starttime="20151201 15:56:30.350"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:30.355" starttime="20151201 15:56:30.349"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.359" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:30.360" starttime="20151201 15:56:30.357"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:30.361" starttime="20151201 15:56:30.355"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.366" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20151201 15:56:30.367" starttime="20151201 15:56:30.364"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:30.368" starttime="20151201 15:56:30.361"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:30.369" starttime="20151201 15:56:30.344"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.372" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20151201 15:56:30.373" starttime="20151201 15:56:30.370"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.375" starttime="20151201 15:56:30.373"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.378" starttime="20151201 15:56:30.376"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.381" starttime="20151201 15:56:30.379"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>LowLevelOps</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.383" starttime="20151201 15:56:30.382"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>getMainAccount</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.386" starttime="20151201 15:56:30.384"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.input.subscriberId=${subscriberId}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.388" starttime="20151201 15:56:30.386"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20151201 15:56:30.392" level="INFO">Running with the following project properties set: [u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'HighLevelOps.createTestSubscribers.input.amount=1', u'HighLevelOps.createTestSubscribers.input.imsiRangeStart=232201667725500', u'HighLevelOps.createTestSubscribers.input.msisdnRangeStart=43667725500', u'HighLevelOps.createTestSubscribers.input.type=PREPAID', u'HighLevelOps.createTestSubscribers.input.languageid=1', u'HighLevelOps.createTestSubscribers.input.tariffId=101001', u'HighLevelOps.createTestSubscribers.input.balance=10000000', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getSubscriberProfile.input.msisdn=43667725900', u'crceHost=10.105.125.159', u'crcePort=8080', u'crceWebservicesBasePath=/inew-mvno-crce-webservices/', u'LowLevelOps.getMainAccount.input.subscriberId=165794']</msg>
<msg timestamp="20151201 15:56:30.610" level="INFO">15:56:30,606 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK
15:56:30,607 INFO  [log] LowLevelOps.getMainAccount.output.accountId=165795
15:56:30,607 INFO  [log] LowLevelOps.getMainAccount.output.balance=9910000
15:56:30,608 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN
15:56:30,608 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151201 15:56:30.611" starttime="20151201 15:56:30.391"></status>
</kw>
<msg timestamp="20151201 15:56:30.613" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:30.613" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20151201 15:56:30.612" starttime="20151201 15:56:30.389"></status>
</kw>
<kw type="kw" name="${resultCode} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:30.625" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.resultCode=</msg>
<status status="PASS" endtime="20151201 15:56:30.624" starttime="20151201 15:56:30.622"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.628" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:30.628" starttime="20151201 15:56:30.626"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.631" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:30.631" starttime="20151201 15:56:30.629"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.637" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:30.641" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:30.642" starttime="20151201 15:56:30.634"></status>
</kw>
<msg timestamp="20151201 15:56:30.643" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:30.644" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,606 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151201 15:56:30.643" starttime="20151201 15:56:30.632"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.652" starttime="20151201 15:56:30.650"></status>
</kw>
<msg timestamp="20151201 15:56:30.653" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,606 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151201 15:56:30.653" starttime="20151201 15:56:30.645"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.661" starttime="20151201 15:56:30.659"></status>
</kw>
<msg timestamp="20151201 15:56:30.662" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,606 INFO  [log] LowLevelOps.getMainAccount.output.resultCode=OK</msg>
<status status="PASS" endtime="20151201 15:56:30.661" starttime="20151201 15:56:30.654"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.670" starttime="20151201 15:56:30.668"></status>
</kw>
<msg timestamp="20151201 15:56:30.672" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:30.671" starttime="20151201 15:56:30.663"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.682" starttime="20151201 15:56:30.680"></status>
</kw>
<msg timestamp="20151201 15:56:30.683" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:30.683" starttime="20151201 15:56:30.673"></status>
</kw>
<msg timestamp="20151201 15:56:30.685" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20151201 15:56:30.684" starttime="20151201 15:56:30.615"></status>
</kw>
<kw type="kw" name="${accountId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.accountId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:30.730" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.accountId=</msg>
<status status="PASS" endtime="20151201 15:56:30.729" starttime="20151201 15:56:30.727"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.733" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:30.733" starttime="20151201 15:56:30.731"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.737" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:30.736" starttime="20151201 15:56:30.735"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.742" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:30.746" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:30.747" starttime="20151201 15:56:30.740"></status>
</kw>
<msg timestamp="20151201 15:56:30.749" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:30.749" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,607 INFO  [log] LowLevelOps.getMainAccount.output.accountId=165795</msg>
<status status="PASS" endtime="20151201 15:56:30.748" starttime="20151201 15:56:30.738"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.757" starttime="20151201 15:56:30.755"></status>
</kw>
<msg timestamp="20151201 15:56:30.758" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,607 INFO  [log] LowLevelOps.getMainAccount.output.accountId=165795</msg>
<status status="PASS" endtime="20151201 15:56:30.758" starttime="20151201 15:56:30.750"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.766" starttime="20151201 15:56:30.764"></status>
</kw>
<msg timestamp="20151201 15:56:30.768" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,607 INFO  [log] LowLevelOps.getMainAccount.output.accountId=165795</msg>
<status status="PASS" endtime="20151201 15:56:30.767" starttime="20151201 15:56:30.759"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.778" starttime="20151201 15:56:30.776"></status>
</kw>
<msg timestamp="20151201 15:56:30.780" level="INFO">${resultCode} = 165795</msg>
<status status="PASS" endtime="20151201 15:56:30.779" starttime="20151201 15:56:30.770"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.792" starttime="20151201 15:56:30.790"></status>
</kw>
<msg timestamp="20151201 15:56:30.794" level="INFO">${resultCode} = 165795</msg>
<status status="PASS" endtime="20151201 15:56:30.793" starttime="20151201 15:56:30.781"></status>
</kw>
<msg timestamp="20151201 15:56:30.796" level="INFO">${accountId} = 165795</msg>
<status status="PASS" endtime="20151201 15:56:30.795" starttime="20151201 15:56:30.687"></status>
</kw>
<kw type="kw" name="${balance} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.balance</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:30.809" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.balance=</msg>
<status status="PASS" endtime="20151201 15:56:30.808" starttime="20151201 15:56:30.806"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.813" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:30.812" starttime="20151201 15:56:30.810"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.817" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:30.816" starttime="20151201 15:56:30.814"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.823" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:30.827" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:30.828" starttime="20151201 15:56:30.821"></status>
</kw>
<msg timestamp="20151201 15:56:30.830" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:30.831" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,607 INFO  [log] LowLevelOps.getMainAccount.output.balance=9910000</msg>
<status status="PASS" endtime="20151201 15:56:30.829" starttime="20151201 15:56:30.818"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.840" starttime="20151201 15:56:30.838"></status>
</kw>
<msg timestamp="20151201 15:56:30.841" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,607 INFO  [log] LowLevelOps.getMainAccount.output.balance=9910000</msg>
<status status="PASS" endtime="20151201 15:56:30.841" starttime="20151201 15:56:30.832"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.850" starttime="20151201 15:56:30.848"></status>
</kw>
<msg timestamp="20151201 15:56:30.852" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,607 INFO  [log] LowLevelOps.getMainAccount.output.balance=9910000</msg>
<status status="PASS" endtime="20151201 15:56:30.851" starttime="20151201 15:56:30.843"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.862" starttime="20151201 15:56:30.859"></status>
</kw>
<msg timestamp="20151201 15:56:30.863" level="INFO">${resultCode} = 9910000</msg>
<status status="PASS" endtime="20151201 15:56:30.863" starttime="20151201 15:56:30.853"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.876" starttime="20151201 15:56:30.874"></status>
</kw>
<msg timestamp="20151201 15:56:30.878" level="INFO">${resultCode} = 9910000</msg>
<status status="PASS" endtime="20151201 15:56:30.877" starttime="20151201 15:56:30.865"></status>
</kw>
<msg timestamp="20151201 15:56:30.880" level="INFO">${balance} = 9910000</msg>
<status status="PASS" endtime="20151201 15:56:30.879" starttime="20151201 15:56:30.798"></status>
</kw>
<kw type="kw" name="${category} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.category</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:30.891" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.category=</msg>
<status status="PASS" endtime="20151201 15:56:30.891" starttime="20151201 15:56:30.888"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.894" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:30.894" starttime="20151201 15:56:30.892"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.897" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:30.897" starttime="20151201 15:56:30.895"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.902" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:30.905" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:30.905" starttime="20151201 15:56:30.900"></status>
</kw>
<msg timestamp="20151201 15:56:30.907" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:30.907" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,608 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151201 15:56:30.906" starttime="20151201 15:56:30.898"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.913" starttime="20151201 15:56:30.912"></status>
</kw>
<msg timestamp="20151201 15:56:30.915" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,608 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151201 15:56:30.914" starttime="20151201 15:56:30.908"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.921" starttime="20151201 15:56:30.919"></status>
</kw>
<msg timestamp="20151201 15:56:30.922" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,608 INFO  [log] LowLevelOps.getMainAccount.output.category=MAIN</msg>
<status status="PASS" endtime="20151201 15:56:30.921" starttime="20151201 15:56:30.915"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.929" starttime="20151201 15:56:30.927"></status>
</kw>
<msg timestamp="20151201 15:56:30.930" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151201 15:56:30.929" starttime="20151201 15:56:30.923"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.938" starttime="20151201 15:56:30.937"></status>
</kw>
<msg timestamp="20151201 15:56:30.939" level="INFO">${resultCode} = MAIN</msg>
<status status="PASS" endtime="20151201 15:56:30.939" starttime="20151201 15:56:30.931"></status>
</kw>
<msg timestamp="20151201 15:56:30.941" level="INFO">${category} = MAIN</msg>
<status status="PASS" endtime="20151201 15:56:30.940" starttime="20151201 15:56:30.882"></status>
</kw>
<kw type="kw" name="${currencyId} = subscriber-admin-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>LowLevelOps.getMainAccount.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20151201 15:56:30.949" level="INFO">${return_marker} = LowLevelOps.getMainAccount.output.currencyId=</msg>
<status status="PASS" endtime="20151201 15:56:30.948" starttime="20151201 15:56:30.947"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.952" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20151201 15:56:30.951" starttime="20151201 15:56:30.950"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.954" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20151201 15:56:30.954" starttime="20151201 15:56:30.953"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20151201 15:56:30.959" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20151201 15:56:30.962" level="INFO">1 out of 5 lines matched</msg>
<status status="PASS" endtime="20151201 15:56:30.963" starttime="20151201 15:56:30.957"></status>
</kw>
<msg timestamp="20151201 15:56:30.964" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20151201 15:56:30.964" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,608 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151201 15:56:30.963" starttime="20151201 15:56:30.955"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.970" starttime="20151201 15:56:30.969"></status>
</kw>
<msg timestamp="20151201 15:56:30.972" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,608 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151201 15:56:30.971" starttime="20151201 15:56:30.965"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.978" starttime="20151201 15:56:30.976"></status>
</kw>
<msg timestamp="20151201 15:56:30.979" level="INFO">${return_log_entry} = 2015-12-01 15:56:30,608 INFO  [log] LowLevelOps.getMainAccount.output.currencyId=101000</msg>
<status status="PASS" endtime="20151201 15:56:30.979" starttime="20151201 15:56:30.972"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.985" starttime="20151201 15:56:30.984"></status>
</kw>
<msg timestamp="20151201 15:56:30.987" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151201 15:56:30.986" starttime="20151201 15:56:30.980"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:30.995" starttime="20151201 15:56:30.993"></status>
</kw>
<msg timestamp="20151201 15:56:30.996" level="INFO">${resultCode} = 101000</msg>
<status status="PASS" endtime="20151201 15:56:30.996" starttime="20151201 15:56:30.987"></status>
</kw>
<msg timestamp="20151201 15:56:30.997" level="INFO">${currencyId} = 101000</msg>
<status status="PASS" endtime="20151201 15:56:30.997" starttime="20151201 15:56:30.942"></status>
</kw>
<kw type="kw" name="subscriber-admin-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>LowLevelOps-GetMainAccount</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:31.005" starttime="20151201 15:56:31.003"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:31.007" starttime="20151201 15:56:31.005"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:31.009" starttime="20151201 15:56:31.008"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20151201 15:56:31.019" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/LowLevelOps-GetMainAccount*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/matko.sanseovic/basic/PostPaid/MOC/OnNet/MOC_POSTPAID_ONNET_Busy/LowLevelOps-GetMainAccount*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20151201 15:56:31.020" starttime="20151201 15:56:31.015"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:31.021" starttime="20151201 15:56:31.014"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:31.022" starttime="20151201 15:56:31.010"></status>
</kw>
<status status="PASS" endtime="20151201 15:56:31.022" starttime="20151201 15:56:30.999"></status>
</kw>
<msg timestamp="20151201 15:56:31.025" level="INFO">${resultCode} = OK</msg>
<msg timestamp="20151201 15:56:31.026" level="INFO">${accId} = 165795</msg>
<msg timestamp="20151201 15:56:31.026" level="INFO">${bal} = 9910000</msg>
<msg timestamp="20151201 15:56:31.027" level="INFO">${cat} = MAIN</msg>
<msg timestamp="20151201 15:56:31.027" level="INFO">${curr} = 101000</msg>
<status status="PASS" endtime="20151201 15:56:31.025" starttime="20151201 15:56:30.335"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${target_bal}=</arg>
<arg>Evaluate</arg>
<arg>${INITIAL_BALANCE}-${TESTSUBCRIBERS DEFAULT SLICE COSTS}</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:31.030" starttime="20151201 15:56:31.028"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Should Be Equal As Numbers</arg>
<arg>${target_bal}</arg>
<arg>${bal}</arg>
<arg>msg=Expected balance and retrieved balance mismatch!</arg>
</arguments>
<status status="PASS" endtime="20151201 15:56:31.032" starttime="20151201 15:56:31.030"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Account balance check: ${bal}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20151201 15:56:31.034" level="INFO">Account balance check: 9910000</msg>
<status status="PASS" endtime="20151201 15:56:31.035" starttime="20151201 15:56:31.033"></status>
</kw>
<doc>Test will make a MOC call of the postpaid subscriber to the busy B party.

Arguments:
none
Returns:
none
Fails: in case CG session fails or account balance evaluation fails

=================================================================================</doc>
<tags>
<tag>matko.sanseovic</tag>
<tag>MOC_only</tag>
<tag>mTel_PPLIGHT_TB25_supported</tag>
<tag>POSTPAID_only</tag>
</tags>
<status status="PASS" critical="yes" endtime="20151201 15:56:31.036" starttime="20151201 15:56:09.956"></status>
</test>
<doc>Testing the postpaid MOC call to the busy called party (called party in another call)

============================================================</doc>
<metadata>
</metadata>
<status status="PASS" endtime="20151201 15:56:31.041" starttime="20151201 15:56:03.856"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" info="" doc="" combined="" fail="0" links="">matko.sanseovic</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">MOC_only</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">mTel_PPLIGHT_TB25_supported</stat>
<stat pass="1" info="" doc="" combined="" fail="0" links="">POSTPAID_only</stat>
</tag>
<suite>
<stat pass="1" id="s1" fail="0" name="MOC POSTPAID ONNET-Busy-robot-suite">MOC POSTPAID ONNET-Busy-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
