<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.8.7 (Jython 2.7rc1 on java1.7.0_79)" generated="20160205 17:05:41.541">
<suite source="/opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/ESB_CRCE_Currency-demo-robot-suite.txt" id="s1" name="ESB CRCE Currency-demo-robot-suite">
<test id="s1-t1" name="Run CRCE Get Currencies">
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160205 17:05:42.805" level="INFO">10.105.119.165</msg>
<status status="PASS" endtime="20160205 17:05:42.806" starttime="20160205 17:05:42.802"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${crce_port}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160205 17:05:42.811" level="INFO">8280</msg>
<status status="PASS" endtime="20160205 17:05:42.812" starttime="20160205 17:05:42.808"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${crce_webservicesBasePath}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160205 17:05:42.817" level="INFO">/services/CurrencyService.CurrencyServiceHttpSoap12Endpoint</msg>
<status status="PASS" endtime="20160205 17:05:42.818" starttime="20160205 17:05:42.814"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Robot workspace resource used is:${ROBOT_WORKSPACE_RESOURCE}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160205 17:05:42.823" level="INFO">Robot workspace resource used is:/opt/robot/robotworkspace/robotworkspace-resource.txt</msg>
<status status="PASS" endtime="20160205 17:05:42.824" starttime="20160205 17:05:42.820"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Sut file used is:${SUT_RESOURCE}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160205 17:05:42.829" level="INFO">Sut file used is:/opt/robot/robotworkspace/suts/MVNA-MEX-resource.txt</msg>
<status status="PASS" endtime="20160205 17:05:42.830" starttime="20160205 17:05:42.826"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>The CRCE used is:${CRCE DB HOST}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160205 17:05:42.835" level="INFO">The CRCE used is:10.105.119.129</msg>
<status status="PASS" endtime="20160205 17:05:42.836" starttime="20160205 17:05:42.832"></status>
</kw>
<kw type="kw" name="dblib_support-resource.DBLIB Connect to PostgresDB">
<doc>this helper shields testsuite developers from the necessity to know driver and connection string details.</doc>
<arguments>
<arg>${CRCE DB HOST}</arg>
<arg>${CRCE DB PORT}</arg>
<arg>${CRCE DB NAME}</arg>
<arg>${CRCE DB USER}</arg>
<arg>${CRCE DB PWD}</arg>
</arguments>
<kw type="kw" name="org.robot.database.keywords.DatabaseLibrary.Connect To Database">
<doc></doc>
<arguments>
<arg>org.postgresql.Driver</arg>
<arg>jdbc:postgresql://${host}:${port}/${dbName}</arg>
<arg>${user}</arg>
<arg>${pswd}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:42.939" starttime="20160205 17:05:42.858"></status>
</kw>
<status status="PASS" endtime="20160205 17:05:42.942" starttime="20160205 17:05:42.839"></status>
</kw>
<kw type="kw" name="@{QueryResult} = dblib_support-resource.DBLIB Query">
<doc>this helper executes the passed select statement and returns the result as a list.</doc>
<arguments>
<arg>Select provider_id from acc_currencies where provider_id is not null limit 1</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Execute Query *****</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:42.966" starttime="20160205 17:05:42.963"></status>
</kw>
<kw type="kw" name="org.robot.database.keywords.DatabaseLibrary.Store Query Result To File">
<doc></doc>
<arguments>
<arg>${selectStatement}</arg>
<arg>${TMP_QUERY_RESULT_FILE}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:42.997" starttime="20160205 17:05:42.968"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Load Result from file</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:43.004" starttime="20160205 17:05:43.000"></status>
</kw>
<kw type="kw" name="${queryResultSetLines} = OperatingSystem.Get File">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${TMP_QUERY_RESULT_FILE}</arg>
</arguments>
<msg timestamp="20160205 17:05:43.011" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/tmp_query_result.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/tmp_query_result.txt&lt;/a&gt;'</msg>
<msg timestamp="20160205 17:05:43.013" level="INFO">${queryResultSetLines} = 99|
</msg>
<status status="PASS" endtime="20160205 17:05:43.012" starttime="20160205 17:05:43.008"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Transform single string result into list of lines *****</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:43.017" starttime="20160205 17:05:43.015"></status>
</kw>
<kw type="kw" name="@{queryResultSet} = String.Split To Lines">
<doc>Converts the `string` into a list of lines.</doc>
<arguments>
<arg>${queryResultSetLines}</arg>
</arguments>
<msg timestamp="20160205 17:05:43.022" level="INFO">1 lines returned</msg>
<msg timestamp="20160205 17:05:43.024" level="INFO">@{queryResultSet} = [ 99| ]</msg>
<status status="PASS" endtime="20160205 17:05:43.023" starttime="20160205 17:05:43.019"></status>
</kw>
<msg timestamp="20160205 17:05:43.028" level="INFO">@{QueryResult} = [ 99| ]</msg>
<status status="PASS" endtime="20160205 17:05:43.026" starttime="20160205 17:05:42.947"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>@{QueryResult}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160205 17:05:43.033" level="INFO">99|</msg>
<status status="PASS" endtime="20160205 17:05:43.034" starttime="20160205 17:05:43.030"></status>
</kw>
<kw type="kw" name="${ProviderId} = String.Get Line">
<doc>Returns the specified line from the given `string`.</doc>
<arguments>
<arg>@{QueryResult}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160205 17:05:43.040" level="INFO">${ProviderId} = 99|</msg>
<status status="PASS" endtime="20160205 17:05:43.039" starttime="20160205 17:05:43.036"></status>
</kw>
<kw type="kw" name="${ProviderId} = String.Fetch From Left">
<doc>Returns contents of the `string` before the first occurrence of `marker`.</doc>
<arguments>
<arg>${ProviderId}</arg>
<arg>|</arg>
</arguments>
<msg timestamp="20160205 17:05:43.046" level="INFO">${ProviderId} = 99</msg>
<status status="PASS" endtime="20160205 17:05:43.045" starttime="20160205 17:05:43.042"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${ProviderId}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160205 17:05:43.050" level="INFO">99</msg>
<status status="PASS" endtime="20160205 17:05:43.052" starttime="20160205 17:05:43.048"></status>
</kw>
<kw type="kw" name="${CurrencyIdQuery} = BuiltIn.Catenate">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Select distinct id as currency_id from acc_currencies where provider_id=</arg>
<arg>${ProviderId}</arg>
<arg>order by currency_id asc</arg>
</arguments>
<msg timestamp="20160205 17:05:43.057" level="INFO">${CurrencyIdQuery} = Select distinct id as currency_id from acc_currencies where provider_id= 99 order by currency_id asc</msg>
<status status="PASS" endtime="20160205 17:05:43.057" starttime="20160205 17:05:43.053"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${CurrencyIdQuery}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160205 17:05:43.063" level="INFO">Select distinct id as currency_id from acc_currencies where provider_id= 99 order by currency_id asc</msg>
<status status="PASS" endtime="20160205 17:05:43.064" starttime="20160205 17:05:43.060"></status>
</kw>
<kw type="kw" name="@{CurrencyId} = dblib_support-resource.DBLIB Query">
<doc>this helper executes the passed select statement and returns the result as a list.</doc>
<arguments>
<arg>${CurrencyIdQuery}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Execute Query *****</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:43.083" starttime="20160205 17:05:43.081"></status>
</kw>
<kw type="kw" name="org.robot.database.keywords.DatabaseLibrary.Store Query Result To File">
<doc></doc>
<arguments>
<arg>${selectStatement}</arg>
<arg>${TMP_QUERY_RESULT_FILE}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:43.092" starttime="20160205 17:05:43.085"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Load Result from file</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:43.095" starttime="20160205 17:05:43.093"></status>
</kw>
<kw type="kw" name="${queryResultSetLines} = OperatingSystem.Get File">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${TMP_QUERY_RESULT_FILE}</arg>
</arguments>
<msg timestamp="20160205 17:05:43.100" html="yes" level="INFO">Getting file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/tmp_query_result.txt"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/tmp_query_result.txt&lt;/a&gt;'</msg>
<msg timestamp="20160205 17:05:43.102" level="INFO">${queryResultSetLines} = 199000|
199001|
199002|
199003|
199004|
</msg>
<status status="PASS" endtime="20160205 17:05:43.101" starttime="20160205 17:05:43.097"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>***** Transform single string result into list of lines *****</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:43.106" starttime="20160205 17:05:43.104"></status>
</kw>
<kw type="kw" name="@{queryResultSet} = String.Split To Lines">
<doc>Converts the `string` into a list of lines.</doc>
<arguments>
<arg>${queryResultSetLines}</arg>
</arguments>
<msg timestamp="20160205 17:05:43.110" level="INFO">5 lines returned</msg>
<msg timestamp="20160205 17:05:43.112" level="INFO">@{queryResultSet} = [ 199000| | 199001| | 199002| | 199003| | 199004| ]</msg>
<status status="PASS" endtime="20160205 17:05:43.111" starttime="20160205 17:05:43.107"></status>
</kw>
<msg timestamp="20160205 17:05:43.114" level="INFO">@{CurrencyId} = [ 199000| | 199001| | 199002| | 199003| | 199004| ]</msg>
<status status="PASS" endtime="20160205 17:05:43.114" starttime="20160205 17:05:43.067"></status>
</kw>
<kw type="kw" name="${return_code}, ${A_currencyId} = ESB_CRCE_Currency-support-resource.CRCE Get Currencies">
<doc>gets one or multiple currencies through provider id</doc>
<arguments>
<arg>${crce_host}</arg>
<arg>${crce_port}</arg>
<arg>${crce_webservicesBasePath}</arg>
<arg>${ProviderId}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_host=${crce_host}</arg>
</arguments>
<msg timestamp="20160205 17:05:43.137" level="INFO">msg=crce_host=10.105.119.165</msg>
<status status="PASS" endtime="20160205 17:05:43.138" starttime="20160205 17:05:43.134"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_port=${crce_port}</arg>
</arguments>
<msg timestamp="20160205 17:05:43.142" level="INFO">msg=crce_port=8280</msg>
<status status="PASS" endtime="20160205 17:05:43.143" starttime="20160205 17:05:43.140"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_webservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<msg timestamp="20160205 17:05:43.147" level="INFO">msg=crce_webservicesBasePath=/services/CurrencyService.CurrencyServiceHttpSoap12Endpoint</msg>
<status status="PASS" endtime="20160205 17:05:43.148" starttime="20160205 17:05:43.144"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>msg=crce_provider_id=${crce_provider_id}</arg>
</arguments>
<msg timestamp="20160205 17:05:43.152" level="INFO">msg=crce_provider_id=99</msg>
<status status="PASS" endtime="20160205 17:05:43.153" starttime="20160205 17:05:43.150"></status>
</kw>
<kw type="kw" name="ESB_CRCE_Currency-support-resource.CRCE Setup SoapUI Logs">
<doc>This is a PRIVATE helper function to setup the SoapUI's basic log files since for unknown reasons SoapUI sometimes doesn't newly create them</doc>
<arguments>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<msg timestamp="20160205 17:05:43.176" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/global-groovy.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160205 17:05:43.177" starttime="20160205 17:05:43.172"></status>
</kw>
<status status="PASS" endtime="20160205 17:05:43.178" starttime="20160205 17:05:43.170"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI LOG}</arg>
</arguments>
<msg timestamp="20160205 17:05:43.185" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/soapui.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/soapui.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160205 17:05:43.186" starttime="20160205 17:05:43.182"></status>
</kw>
<status status="PASS" endtime="20160205 17:05:43.187" starttime="20160205 17:05:43.180"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Create File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Create File">
<doc>Creates a file with the given content and encoding.</doc>
<arguments>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<msg timestamp="20160205 17:05:43.195" html="yes" level="INFO">Created file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/soapui-errors.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/soapui-errors.log&lt;/a&gt;'</msg>
<status status="PASS" endtime="20160205 17:05:43.196" starttime="20160205 17:05:43.192"></status>
</kw>
<status status="PASS" endtime="20160205 17:05:43.197" starttime="20160205 17:05:43.189"></status>
</kw>
<status status="PASS" endtime="20160205 17:05:43.199" starttime="20160205 17:05:43.156"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Project">
<doc>Initialize the runner and set the project string </doc>
<arguments>
<arg>${ROBOT WORKSPACE PATH}/${SOAPUI PROJECTS WORKSPACE RELATIVE PATH}</arg>
</arguments>
<msg timestamp="20160205 17:05:43.205" level="INFO">SoapUI 5.1.3 TestCase Runner</msg>
<status status="PASS" endtime="20160205 17:05:43.205" starttime="20160205 17:05:43.201"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceHost=${crce_host}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:43.210" starttime="20160205 17:05:43.207"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crcePort=${crce_port}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:43.214" starttime="20160205 17:05:43.212"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>crceWebservicesBasePath=${crce_webservicesBasePath}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:43.219" starttime="20160205 17:05:43.216"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Suite">
<doc>Set the suite string </doc>
<arguments>
<arg>CurrencyService_TestSuite</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:43.223" starttime="20160205 17:05:43.221"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Case">
<doc>Set the test case string </doc>
<arguments>
<arg>CurrencyService_TestCase</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:43.226" starttime="20160205 17:05:43.224"></status>
</kw>
<kw type="kw" name="InewSoapUILibrary.Soapui Set Project Property">
<doc>Sets project properties for the current test run.</doc>
<arguments>
<arg>CurrencyService_TestSuite.CurrencyService_TestCase.input.crce_provider_id=${crce_provider_id}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:43.231" starttime="20160205 17:05:43.228"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_value_dummy} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>SoapUI Run</arg>
</arguments>
<kw type="kw" name="InewSoapUILibrary.Soapui Run">
<doc>Run the runner and report to Robot </doc>
<arguments>
</arguments>
<msg timestamp="20160205 17:05:43.237" level="INFO">Running with the following project properties set: [u'crceHost=10.105.119.165', u'crcePort=8280', u'crceWebservicesBasePath=/services/CurrencyService.CurrencyServiceHttpSoap12Endpoint', u'CurrencyService_TestSuite.CurrencyService_TestCase.input.crce_provider_id=99']</msg>
<msg timestamp="20160205 17:05:47.123" level="INFO">17:05:43,405 WARN  [SoapUI] Missing folder [/opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/ext] for external libraries
17:05:43,405 INFO  [DefaultSoapUICore] Creating new settings at [/home/sasharma/soapui-settings.xml]
17:05:45,118 INFO  [WsdlProject] Loaded project from [file:/opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/robot_crce_currency_bridge-soapui-project.xml]
17:05:45,126 INFO  [SoapUITestCaseRunner] Setting project property [crceHost] to [10.105.119.165]
17:05:45,126 INFO  [SoapUITestCaseRunner] Setting project property [crcePort] to [8280]
17:05:45,126 INFO  [SoapUITestCaseRunner] Setting project property [crceWebservicesBasePath] to [/services/CurrencyService.CurrencyServiceHttpSoap12Endpoint]
17:05:45,126 INFO  [SoapUITestCaseRunner] Setting project property [CurrencyService_TestSuite.CurrencyService_TestCase.input.crce_provider_id] to [99]
17:05:45,128 INFO  [SoapUITestCaseRunner] Running SoapUI tests in project [robot_crce_currency_bridge-soapui-project]
17:05:45,129 INFO  [SoapUITestCaseRunner] Running TestCase [CurrencyService_TestCase]
17:05:45,133 INFO  [SoapUITestCaseRunner] Running SoapUI testcase [CurrencyService_TestCase]
17:05:45,138 INFO  [SoapUITestCaseRunner] running step [getCurrencies]
17:05:45,318 DEBUG [HttpClientSupport$SoapUIHttpClient] Attempt 1 to execute request
17:05:45,318 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Sending request: POST /services/CurrencyService.CurrencyServiceHttpSoap12Endpoint HTTP/1.1
17:05:45,868 DEBUG [SoapUIMultiThreadedHttpConnectionManager$SoapUIDefaultClientConnection] Receiving response: HTTP/1.1 200 OK
17:05:45,879 DEBUG [HttpClientSupport$SoapUIHttpClient] Connection can be kept alive indefinitely
17:05:46,056 INFO  [SoapUITestCaseRunner] Assertion [SOAP Response] has status VALID
17:05:46,056 INFO  [SoapUITestCaseRunner] Assertion [Contains 1] has status VALID
17:05:46,056 INFO  [SoapUITestCaseRunner] running step [cancel_on_SOAP_error]
17:05:46,654 INFO  [SoapUITestCaseRunner] running step [Transfer values]
17:05:47,081 INFO  [SoapUITestCaseRunner] running step [log_output]
17:05:47,120 INFO  [log] CurrencyService_TestSuite.CurrencyService_TestCase.output.resultCode=OK
17:05:47,120 INFO  [log] CurrencyService_TestSuite.CurrencyService_TestCase.output.currencyId=199000|199001|199002|199003|199004
17:05:47,121 INFO  [SoapUITestCaseRunner] Finished running SoapUI testcase [CurrencyService_TestCase], time taken: 1974ms, status: FINISHED
17:05:47,121 INFO  [SoapUITestCaseRunner] TestCase [CurrencyService_TestCase] finished with status [FINISHED] in 1974ms</msg>
<status status="PASS" endtime="20160205 17:05:47.126" starttime="20160205 17:05:43.235"></status>
</kw>
<msg timestamp="20160205 17:05:47.130" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160205 17:05:47.131" level="INFO">${return_value_dummy} = None</msg>
<status status="PASS" endtime="20160205 17:05:47.128" starttime="20160205 17:05:43.233"></status>
</kw>
<kw type="kw" name="${resultCode} = ESB_CRCE_Currency-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>CurrencyService_TestSuite.CurrencyService_TestCase.output.resultCode</arg>
<arg>UNKNOWN_ERROR</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160205 17:05:47.153" level="INFO">${return_marker} = CurrencyService_TestSuite.CurrencyService_TestCase.output.resultCode=</msg>
<status status="PASS" endtime="20160205 17:05:47.152" starttime="20160205 17:05:47.149"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160205 17:05:47.158" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160205 17:05:47.157" starttime="20160205 17:05:47.155"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160205 17:05:47.163" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160205 17:05:47.162" starttime="20160205 17:05:47.160"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160205 17:05:47.171" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160205 17:05:47.178" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20160205 17:05:47.179" starttime="20160205 17:05:47.168"></status>
</kw>
<msg timestamp="20160205 17:05:47.181" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160205 17:05:47.182" level="INFO">${return_log_entry} = 2016-02-05 17:05:47,120 INFO  [log] CurrencyService_TestSuite.CurrencyService_TestCase.output.resultCode=OK</msg>
<status status="PASS" endtime="20160205 17:05:47.180" starttime="20160205 17:05:47.165"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:47.199" starttime="20160205 17:05:47.197"></status>
</kw>
<msg timestamp="20160205 17:05:47.201" level="INFO">${return_log_entry} = 2016-02-05 17:05:47,120 INFO  [log] CurrencyService_TestSuite.CurrencyService_TestCase.output.resultCode=OK</msg>
<status status="PASS" endtime="20160205 17:05:47.200" starttime="20160205 17:05:47.184"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:47.211" starttime="20160205 17:05:47.208"></status>
</kw>
<msg timestamp="20160205 17:05:47.212" level="INFO">${return_log_entry} = 2016-02-05 17:05:47,120 INFO  [log] CurrencyService_TestSuite.CurrencyService_TestCase.output.resultCode=OK</msg>
<status status="PASS" endtime="20160205 17:05:47.212" starttime="20160205 17:05:47.202"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:47.223" starttime="20160205 17:05:47.220"></status>
</kw>
<msg timestamp="20160205 17:05:47.225" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160205 17:05:47.224" starttime="20160205 17:05:47.214"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:47.238" starttime="20160205 17:05:47.236"></status>
</kw>
<msg timestamp="20160205 17:05:47.240" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160205 17:05:47.239" starttime="20160205 17:05:47.227"></status>
</kw>
<msg timestamp="20160205 17:05:47.242" level="INFO">${resultCode} = OK</msg>
<status status="PASS" endtime="20160205 17:05:47.241" starttime="20160205 17:05:47.135"></status>
</kw>
<kw type="kw" name="${currencyId} = ESB_CRCE_Currency-support-resource.CRCE Get Groovy Log Return Property">
<doc>This is a PRIVATE helper function to retrieve return values placed into the Groovy log by the SoaupUI TCs .</doc>
<arguments>
<arg>CurrencyService_TestSuite.CurrencyService_TestCase.output.currencyId</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw type="kw" name="${return_marker} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${property_name}=</arg>
</arguments>
<msg timestamp="20160205 17:05:47.260" level="INFO">${return_marker} = CurrencyService_TestSuite.CurrencyService_TestCase.output.currencyId=</msg>
<status status="PASS" endtime="20160205 17:05:47.259" starttime="20160205 17:05:47.257"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160205 17:05:47.264" level="INFO">${resultCode} = </msg>
<status status="PASS" endtime="20160205 17:05:47.264" starttime="20160205 17:05:47.262"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<msg timestamp="20160205 17:05:47.269" level="INFO">${return_log_entry} = </msg>
<status status="PASS" endtime="20160205 17:05:47.268" starttime="20160205 17:05:47.266"></status>
</kw>
<kw type="kw" name="${execution_status}, ${return_log_entry} = BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Grep File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Grep File">
<doc>Returns the lines of the specified file that match the `pattern`.</doc>
<arguments>
<arg>${SOAPUI GROOVY LOG}</arg>
<arg>${return_marker}</arg>
</arguments>
<msg timestamp="20160205 17:05:47.276" html="yes" level="INFO">Reading file '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/global-groovy.log"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/global-groovy.log&lt;/a&gt;'</msg>
<msg timestamp="20160205 17:05:47.282" level="INFO">1 out of 2 lines matched</msg>
<status status="PASS" endtime="20160205 17:05:47.283" starttime="20160205 17:05:47.273"></status>
</kw>
<msg timestamp="20160205 17:05:47.285" level="INFO">${execution_status} = PASS</msg>
<msg timestamp="20160205 17:05:47.286" level="INFO">${return_log_entry} = 2016-02-05 17:05:47,120 INFO  [log] CurrencyService_TestSuite.CurrencyService_TestCase.output.currencyId=199000|199001|199002|199003|199004</msg>
<status status="PASS" endtime="20160205 17:05:47.284" starttime="20160205 17:05:47.270"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${execution_status}'=='FAIL'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:47.296" starttime="20160205 17:05:47.293"></status>
</kw>
<msg timestamp="20160205 17:05:47.297" level="INFO">${return_log_entry} = 2016-02-05 17:05:47,120 INFO  [log] CurrencyService_TestSuite.CurrencyService_TestCase.output.currencyId=199000|199001|199002|199003|199004</msg>
<status status="PASS" endtime="20160205 17:05:47.297" starttime="20160205 17:05:47.287"></status>
</kw>
<kw type="kw" name="${return_log_entry} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${return_log_entry}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${return_log_entry}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:47.307" starttime="20160205 17:05:47.305"></status>
</kw>
<msg timestamp="20160205 17:05:47.309" level="INFO">${return_log_entry} = 2016-02-05 17:05:47,120 INFO  [log] CurrencyService_TestSuite.CurrencyService_TestCase.output.currencyId=199000|199001|199002|199003|199004</msg>
<status status="PASS" endtime="20160205 17:05:47.308" starttime="20160205 17:05:47.299"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${return_log_entry}'!='${EMPTY}'</arg>
<arg>Fetch From Right</arg>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="String.Fetch From Right">
<doc>Returns contents of the `string` after the last occurrence of `marker`.</doc>
<arguments>
<arg>${return_log_entry}</arg>
<arg>${return_marker}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:47.320" starttime="20160205 17:05:47.317"></status>
</kw>
<msg timestamp="20160205 17:05:47.322" level="INFO">${resultCode} = 199000|199001|199002|199003|199004</msg>
<status status="PASS" endtime="20160205 17:05:47.321" starttime="20160205 17:05:47.311"></status>
</kw>
<kw type="kw" name="${resultCode} = BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${resultCode}'=='${NONE}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE IF</arg>
<arg>'${resultCode}'=='${EMPTY}'</arg>
<arg>Set Variable</arg>
<arg>${default_value}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${resultCode}</arg>
</arguments>
<kw type="kw" name="BuiltIn.Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${resultCode}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:47.350" starttime="20160205 17:05:47.346"></status>
</kw>
<msg timestamp="20160205 17:05:47.351" level="INFO">${resultCode} = 199000|199001|199002|199003|199004</msg>
<status status="PASS" endtime="20160205 17:05:47.351" starttime="20160205 17:05:47.323"></status>
</kw>
<msg timestamp="20160205 17:05:47.354" level="INFO">${currencyId} = 199000|199001|199002|199003|199004</msg>
<status status="PASS" endtime="20160205 17:05:47.354" starttime="20160205 17:05:47.245"></status>
</kw>
<kw type="kw" name="ESB_CRCE_Currency-support-resource.CRCE Cleanup SoapUI Logs">
<doc>This is a PRIVATE helper function to cleanup the testsuite directory from logs created by a SoapUI testcase.</doc>
<arguments>
<arg>CurrencyService_TestSuite-CurrencyService_TestCase</arg>
</arguments>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI GROOVY LOG}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:47.371" starttime="20160205 17:05:47.369"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI LOG}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:47.374" starttime="20160205 17:05:47.372"></status>
</kw>
<kw type="kw" name="BuiltIn.Comment">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${SOAPUI ERROR LOG}</arg>
</arguments>
<status status="PASS" endtime="20160205 17:05:47.378" starttime="20160205 17:05:47.376"></status>
</kw>
<kw type="kw" name="BuiltIn.Run Keyword If">
<doc>Runs the given keyword with the given arguments, if `condition` is true.</doc>
<arguments>
<arg>'${tc_specific_files_prefix}'!='${EMPTY}'</arg>
<arg>Run Keyword And Ignore Error</arg>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="BuiltIn.Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Remove File</arg>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<kw type="kw" name="OperatingSystem.Remove File">
<doc>Removes a file with the given path.</doc>
<arguments>
<arg>${tc_specific_files_prefix}*.*</arg>
</arguments>
<msg timestamp="20160205 17:05:47.395" html="yes" level="INFO">File '&lt;a href="file:///opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/CurrencyService_TestSuite-CurrencyService_TestCase*.*"&gt;/opt/robot/robotworkspace/robot_testsuites/experimental/test_nagarro/ESB_CRCE_Currency/ESB_CRCE_Currency-demo/CurrencyService_TestSuite-CurrencyService_TestCase*.*&lt;/a&gt;' does not exist</msg>
<status status="PASS" endtime="20160205 17:05:47.396" starttime="20160205 17:05:47.387"></status>
</kw>
<status status="PASS" endtime="20160205 17:05:47.397" starttime="20160205 17:05:47.385"></status>
</kw>
<status status="PASS" endtime="20160205 17:05:47.398" starttime="20160205 17:05:47.379"></status>
</kw>
<status status="PASS" endtime="20160205 17:05:47.400" starttime="20160205 17:05:47.357"></status>
</kw>
<msg timestamp="20160205 17:05:47.403" level="INFO">${return_code} = OK</msg>
<msg timestamp="20160205 17:05:47.404" level="INFO">${A_currencyId} = 199000|199001|199002|199003|199004</msg>
<status status="PASS" endtime="20160205 17:05:47.402" starttime="20160205 17:05:43.118"></status>
</kw>
<kw type="kw" name="@{A_CurrencyIds} = String.Split To Lines">
<doc>Converts the `string` into a list of lines.</doc>
<arguments>
<arg>${A_currencyId}</arg>
</arguments>
<msg timestamp="20160205 17:05:47.408" level="INFO">1 lines returned</msg>
<msg timestamp="20160205 17:05:47.409" level="INFO">@{A_CurrencyIds} = [ 199000|199001|199002|199003|199004 ]</msg>
<status status="PASS" endtime="20160205 17:05:47.408" starttime="20160205 17:05:47.406"></status>
</kw>
<kw type="kw" name="BuiltIn.Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20160205 17:05:47.414" level="INFO">OK</msg>
<status status="PASS" endtime="20160205 17:05:47.415" starttime="20160205 17:05:47.411"></status>
</kw>
<kw type="kw" name="BuiltIn.Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${return_code}</arg>
<arg>OK</arg>
</arguments>
<msg timestamp="20160205 17:05:47.419" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20160205 17:05:47.420" starttime="20160205 17:05:47.416"></status>
</kw>
<kw type="kw" name="Collections.Lists Should Be Equal">
<doc>Fails if given lists are unequal.</doc>
<arguments>
<arg>@{A_CurrencyIds}</arg>
<arg>@{CurrencyId}</arg>
</arguments>
<msg timestamp="20160205 17:05:47.424" level="FAIL">Keyword 'Collections.Lists Should Be Equal' expected 2 to 5 arguments, got 6.</msg>
<status status="FAIL" endtime="20160205 17:05:47.424" starttime="20160205 17:05:47.421"></status>
</kw>
<doc>To get Currency id's for a given provider id

Author: Nagarro Team
=========================================================</doc>
<tags>
<tag>MVNA_Supported Nagarro Team experimental End2EndTest, active</tag>
</tags>
<status status="FAIL" critical="yes" endtime="20160205 17:05:47.426" starttime="20160205 17:05:42.783">Keyword 'Collections.Lists Should Be Equal' expected 2 to 5 arguments, got 6.</status>
</test>
<doc>Demonstrates usage of the global keyword resource for subscriber administration support
===============================================================================
Run with arguments:
--variable ROBOT_WORKSPACE_RESOURCE:/opt/robot/robotworkspace/robotworkspace-resource.txt
--variable SUT_RESOURCE:/opt/robot/robotworkspace/suts/TNZ-resource.txt
============================================================</doc>
<metadata>
</metadata>
<status status="FAIL" endtime="20160205 17:05:47.432" starttime="20160205 17:05:41.555"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="0" info="" doc="" combined="" fail="1" links="">MVNA_Supported Nagarro Team experimental End2EndTest, active</stat>
</tag>
<suite>
<stat pass="0" id="s1" fail="1" name="ESB CRCE Currency-demo-robot-suite">ESB CRCE Currency-demo-robot-suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
